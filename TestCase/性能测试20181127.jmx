<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\Users\Administrator\Downloads\apache-jmeter-3.1\lib\mysql-connector-java-5.1.31.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1558402673000</longProp>
        <longProp name="ThreadGroup.end_time">1558402673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【全材通用参数】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th54.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mobile" elementType="Argument">
              <stringProp name="Argument.name">mobile</stringProp>
              <stringProp name="Argument.value">15757176952</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">CGBT_XPX_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserId" elementType="Argument">
              <stringProp name="Argument.name">projectUserId</stringProp>
              <stringProp name="Argument.value">8021201808060000000006</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">01B6DAA6700395A122DDD2E0D602C96B</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">0C9820D122CBB549</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199001109859</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">55587a910882016321201e6ebbc9f595</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.57:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">担保/批量打款任务地址</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【JDBC】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="JDBCurl" elementType="Argument">
              <stringProp name="Argument.name">JDBCurl</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://101.37.106.150:3306/bl_user?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库url</stringProp>
            </elementProp>
            <elementProp name="JDBCUsername" elementType="Argument">
              <stringProp name="Argument.name">JDBCUsername</stringProp>
              <stringProp name="Argument.value">ldd_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库用户名</stringProp>
            </elementProp>
            <elementProp name="JDBCPassword" elementType="Argument">
              <stringProp name="Argument.name">JDBCPassword</stringProp>
              <stringProp name="Argument.value">Hello1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库密码${JDBCPassword}</stringProp>
            </elementProp>
            <elementProp name="bl_user" elementType="Argument">
              <stringProp name="Argument.name">bl_user</stringProp>
              <stringProp name="Argument.value">bl_user</stringProp>
              <stringProp name="Argument.desc">数据库bl_user</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bl_biz" elementType="Argument">
              <stringProp name="Argument.name">bl_biz</stringProp>
              <stringProp name="Argument.value">bl_biz</stringProp>
              <stringProp name="Argument.desc">数据库bl_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">tokenId</stringProp>
              <stringProp name="Header.value">${tokenId}</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value"> application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value"> application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值【IP】和【端口】" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ip_BL}</stringProp>
          <stringProp name="HTTPSampler.port">${ip_BL}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${agreement_BL}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV并发用户数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">user.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">mobile,projectUserId,projectUserToken,user_id,citizenId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证场景" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="【重置法人实名认证】" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">Hello1234</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
select user_id from ${bl_biz}.def_project_user_conf WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user_id</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登录" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">userType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">authType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billIds</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="法人实名（实名认证）" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--立即申请" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提示法人实名https://th52.bailingpay.com/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer&#x9;${agreement_BL}" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打开企业认证https://th52.bailingpay.com/bl/api/auth/openCertification" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/openCertification</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--提交身份证" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交身份证（实名认证）https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="法人实名通过/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/realname</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_real，遍历普通参数树，取出可以匹配的参数status********************************&quot;);

//法人实名认证
String authItem = &quot;au_real&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="人脸认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果实名认证通过，则开始人脸识别认证】" enabled="true">
                <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取身份信息/bl/api/base-auth/user/getUser" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1246593992">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:{&quot;realName&quot;:&quot;${name}&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;},&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="人脸识别埋点/bl/api/home/eventLog" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;eventId&quot;:&quot;Face_recognition_view&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/home/eventLog</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-959138156">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:null,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取人脸识别随机数字https://api.megvii.com/faceid/lite/raw/get_random_number" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">projectCode=${projectCode}&amp;projectUserId=${projectUserId}&amp;sign=${sign}&amp;mobile=${mobile}&amp;loginName=${mobile}&amp;appType=APP&amp;devOs=IOS&amp;blackBox=20290111354jmt9pnz7ted&amp;appName=linzi_h5&amp;api_key=50KRj-TQlbKOuIv8ykzQWwm3f3GlPgxF&amp;api_secret=kwUp9S6-OMbWEhTWPoxhk1nGiyEgaJsa&amp;biz_no=20290111354jmt9pnz7ted&amp;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">api.megvii.com</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/faceid/lite/raw/get_random_number </stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取random_number" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">random_number</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;random_number&quot;: &quot;(.+?)&quot;, &quot;token_random_number&quot;: </stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交视频认证/bl/api/base-auth/auth/authFace" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;imageBestUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/24369b7558aa3025.jpg&quot;,&quot;confidence&quot;:90.004,&quot;thresholds&quot;:&quot;{\&quot;1e-3\&quot;:62.169,\&quot;1e-4\&quot;:69.315,\&quot;1e-5\&quot;:74.399,\&quot;1e-6\&quot;:78.038}&quot;,&quot;faceStatus&quot;:1,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authFace</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem = &quot;au_face&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果人脸验证失败，重置法人实名认证】" enabled="true">
                  <stringProp name="IfController.condition">&quot;${au_face_status}&quot;==&quot;INIT&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="初始化实名认证https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="false">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:false}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                    <boolProp name="autocommit">true</boolProp>
                    <stringProp name="checkQuery"></stringProp>
                    <stringProp name="connectionAge">5000</stringProp>
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="dbUrl">${JDBCurl}</stringProp>
                    <stringProp name="driver"></stringProp>
                    <boolProp name="keepAlive">true</boolProp>
                    <stringProp name="password">${JDBCPassword}</stringProp>
                    <stringProp name="poolMax">0</stringProp>
                    <stringProp name="timeout">10000</stringProp>
                    <stringProp name="transactionIsolation">DEFAULT</stringProp>
                    <stringProp name="trimInterval">60000</stringProp>
                    <stringProp name="username">${JDBCUsername}</stringProp>
                  </JDBCDataSource>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
SELECT id FROM ${bl_user}.bl_user where user_name=&apos;${mobile}&apos; and real_name =&apos;${name}&apos;; 
-- SELECT id FROM bl_user.bl_user where user_name=&apos;15216111199&apos; and real_name =&apos;张三&apos;; </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">user_id</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="银行卡绑定" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户信息/bl/api/base-auth/user/getUser" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290116929jmpwhdktijq&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-986140890">&quot;realName&quot;:&quot;${name}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取银行卡列表/bl/api/base-auth/bankcard/queryBankList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/queryBankList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/bankcardtype?routerFrom=auth%2Fbindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankCode" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankName" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取绑卡验证码/bl/api/base-auth/bankcard/getBindCardSms" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;cardNumber&quot;:&quot;${cardNumber}&quot;,&quot;bankName&quot;:&quot;${bankName}&quot;,&quot;bankCode&quot;:&quot;${bankCode}&quot;,&quot;phone&quot;:&quot;${mobile}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/getBindCardSms</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡id bankId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">6000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑定银行卡/bl/api/base-auth/bankcard/bindCard" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;verifyCode&quot;:&quot;6666&quot;,&quot;bankId&quot;:&quot;${bankId}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/bindCard</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑卡设置密码/bl/api/base-auth/bankcard/setPayPassword" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/setPayPassword</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="通讯录认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="加载通讯录联系人/bl/api/base-auth/auth/authAddressList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901171451gl7wftlj7va&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;emergenceName&quot;:&quot;${emergenceName}&quot;,&quot;emergencePhone&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authAddressList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/addresslist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="运营商认证（移动运营商）" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商认证/bl/api/base-auth/auth/authMobile" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商回调（前端）/bl/api/base-auth/auth/syncCallbackMobile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;mobileReqTimeStamp&quot;:&quot;1541064704242&quot;,&quot;mxcode&quot;:&quot;1&quot;,&quot;userName&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/syncCallbackMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/mobileresult?mobileReqTimeStamp=1541064704242&amp;mxcode=2&amp;taskType=carrier&amp;message=%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E6%88%90%E5%8A%9F&amp;loginDone=1&amp;userId=1811011551382979,bailing,http%3A%2F%2F172.16.158.62%3A8203%2Fauth%2FcallbackMobile&amp;account=18758251233&amp;taskId=e849c5f0-ddb8-11e8-813a-00163e13ed1b&amp;marsInfo=ewogICJwcm9qZWN0Q29kZSIgOiAiIiwKICAic2lnbiIgOiAiIiwKICAibW9iaWxlIiA6ICIiLAogICJwcm9qZWN0VXNlclRva2VuIiA6ICIiLAogICJzZGtWZXJzaW9uIiA6ICIyMzAiLAogICJwcm9qZWN0VXNlcklkIiA6ICIiCn0%3D&amp;sdkInfo=ewogICJzZGtWZXJzaW9uIiA6ICIyMzAiCn0%3D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="营业执照认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="营业执照认证/bl/api/base-auth/auth/authBusinessLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;businessName&quot;:&quot;111&quot;,&quot;businessCreditCode&quot;:&quot;222&quot;,&quot;licenseCode&quot;:&quot;&quot;,&quot;licensePicUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/6ced12f0481777cc&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="经营许可证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="经营许可证/bl/api/base-auth/auth/authBusinessPermit" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/ac5e7590ba5f76f5&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessPermit</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="执业医师资格认证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执业医师资格认证/bl/api/base-auth/auth/authVeterinarianLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/717666f037afe317&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authVeterinarianLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="门店认证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="门店认证/bl/api/base-auth/auth/authShopPicture" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290118450zj65xib0bc&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/29fc7092797cdd92&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authShopPicture</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/shoppicture</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONObject;  
import org.json.JSONException;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem1 = &quot;au_real&quot;;//法人实名
String authItem2 = &quot;au_face&quot;;//法人人脸识别
String authItem3 = &quot;au_bind&quot;;//法人银行卡认证
String authItem4 = &quot;address_list_auth&quot;;//紧急联系人
String authItem5 = &quot;carrier_auth&quot;;//运营商认证
String authItem6 = &quot;business_license_auth&quot;;//营业执照认证
String authItem7 = &quot;business_permit_auth&quot;;//药品经营许可认证
String authItem8 = &quot;veterinarian_license_auth&quot;;//执业医师资格认证
String authItem9 = &quot;shop_picture_auth&quot;;//医保账户认证

for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem = obj.get(&quot;authItem&quot;);	
	if(authItem.equals(authItem1)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
	if(authItem.equals(authItem2)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}	
	if(authItem.equals(authItem3)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_bind_status&quot;,status);
		log.info(&quot;au_bind_status=&quot;+status);
	}
	if(authItem.equals(authItem4)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;address_list_auth_status&quot;,status);
		log.info(&quot;address_list_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem5)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;carrier_auth_status&quot;,status);
		log.info(&quot;carrier_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem6)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_license_auth_status&quot;,status);
		log.info(&quot;business_license_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem7)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_permit_auth_status&quot;,status);
		log.info(&quot;business_permit_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem8)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;veterinarian_license_auth_status&quot;,status);
		log.info(&quot;veterinarian_license_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem9)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;shop_picture_auth_status&quot;,status);
		log.info(&quot;shop_picture_auth_status=&quot;+status);
	}

}
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="认证资料--提交【如果所有的认证都通过，则提交认证资料】" enabled="true">
            <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_face_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_bind_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${address_list_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${business_license_auth_status}&quot;==&quot;PASSED&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <stringProp name="TestPlan.comments"> &quot;${business_permit_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp;&quot;${veterinarian_license_auth_status}&quot;==&quot;PASSED&quot;  &amp;&amp;  &quot;${shop_picture_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${carrier_auth_status}&quot;==&quot;PASSED&quot; 暂无用</stringProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="认证资料提交&quot;submit&quot;:true,/bl/api/auth/apply" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029021744468fvqfmghqby&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;submit&quot;:true,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;longitude&quot;:&quot;120.205672&quot;,&quot;latitude&quot;:&quot;30.212090&quot;,&quot;authType&quot;:&quot;COMPANY&quot;,&quot;userType&quot;:&quot;A&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取msg" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">msg</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;msg&quot;:&quot;(.+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="提交后强风控未通，则更新状态为通过" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver"></stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取表def_project_user_conf中风控状态Risk_status" enabled="true">
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
-- select status from bl_biz.def_project_user_conf where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
select status from ${bl_biz}.def_project_user_conf where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">Risk_status</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果：强风控未通过，修改状态为预风控通过，再次提交认证" enabled="true">
              <stringProp name="IfController.condition">&quot;${Risk_status_1}&quot; != &quot;STRRISKPASSED&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="更新表def_project_user_conf中status = &apos;PRERISKPASSED&apos;" enabled="true">
                <stringProp name="dataSource">RiskJDBCconnect</stringProp>
                <stringProp name="query">-- 如果：强风控未通过，修改def_project_user_conf状态为预风控通过，再次提交认证
-- update bl_biz.def_project_user_conf set status = &apos;PRERISKPASSED&apos; where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
update ${bl_biz}.def_project_user_conf set status = &apos;STRRISKPASSED&apos; where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">user_id</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1543506285000</longProp>
        <longProp name="ThreadGroup.end_time">1543506285000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数【爱宠测试18758251233】" enabled="false">
          <collectionProp name="UserParameters.names">
            <stringProp name="-309387644">program</stringProp>
            <stringProp name="1317234335">agreement_BL</stringProp>
            <stringProp name="100399714">ip_BL</stringProp>
            <stringProp name="-1068855134">mobile</stringProp>
            <stringProp name="-940361562">projectCode</stringProp>
            <stringProp name="1053935061">projectUserToken</stringProp>
            <stringProp name="-1225265473">projectUserId</stringProp>
            <stringProp name="106079">key</stringProp>
            <stringProp name="3373707">name</stringProp>
            <stringProp name="-1539781981">citizenId</stringProp>
            <stringProp name="-1859605943">bankCode</stringProp>
            <stringProp name="-1859291417">bankName</stringProp>
            <stringProp name="508016249">cardNumber</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-197874264">emergenceName</stringProp>
            <stringProp name="-1413853096">amount</stringProp>
            <stringProp name="3387887">nper</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1418242893">ip_quartz</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="257289329">
              <stringProp name="929679">爱宠</stringProp>
              <stringProp name="99617003">https</stringProp>
              <stringProp name="673446295">th53.bailingpay.com</stringProp>
              <stringProp name="920274007">18758251233</stringProp>
              <stringProp name="-1344179528">SHBT_AiChong_yonghu</stringProp>
              <stringProp name="1400216164">9d4d5084762588e2f25f3356af47fd43</stringProp>
              <stringProp name="1751521">9604</stringProp>
              <stringProp name="343802270">OBCQ1CFUUY6C97E2</stringProp>
              <stringProp name="842061">李四</stringProp>
              <stringProp name="-292463435">110101199004071219</stringProp>
              <stringProp name="66840">CMB</stringProp>
              <stringProp name="776116513">招商银行</stringProp>
              <stringProp name="-1708566968">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="-1376477086">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="809225800">李四¥@</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="54554">758</stringProp>
              <stringProp name="2083806793">http://172.16.158.74:8201</stringProp>
            </collectionProp>
            <collectionProp name="-1297933900">
              <stringProp name="702703">古道</stringProp>
              <stringProp name="99617003">https</stringProp>
              <stringProp name="1183980472">th52.bailingpay.com</stringProp>
              <stringProp name="595684475">15757176952</stringProp>
              <stringProp name="-1172263644">CGBT_GuDYC_yonghu</stringProp>
              <stringProp name="471426409">650404A0E6E27F3F7DDE3AFB7237EF94</stringProp>
              <stringProp name="1448639875">100510</stringProp>
              <stringProp name="-1451033919">0B6122EFFDFA9E3A</stringProp>
              <stringProp name="842061">李四</stringProp>
              <stringProp name="1340114059">11010119900107545X</stringProp>
              <stringProp name="66840">CMB</stringProp>
              <stringProp name="776116513">招商银行</stringProp>
              <stringProp name="-1708566968">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="-1376477086">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="809225800">李四¥@</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="54554">758</stringProp>
              <stringProp name="1139044810">http://172.16.158.62:8201</stringProp>
            </collectionProp>
            <collectionProp name="711755411">
              <stringProp name="961294">百凌</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【通用参数】" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th53.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mobile" elementType="Argument">
              <stringProp name="Argument.name">mobile</stringProp>
              <stringProp name="Argument.value">18758251233</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">SHBT_AiChong_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserId" elementType="Argument">
              <stringProp name="Argument.name">projectUserId</stringProp>
              <stringProp name="Argument.value">9604</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">9d4d5084762588e2f25f3356af47fd43</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">OBCQ1CFUUY6C97E2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199004071219</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.74:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【全材通用参数】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th51.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mobile" elementType="Argument">
              <stringProp name="Argument.name">mobile</stringProp>
              <stringProp name="Argument.value">15757176952</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">SHBT_QuanC_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserId" elementType="Argument">
              <stringProp name="Argument.name">projectUserId</stringProp>
              <stringProp name="Argument.value">8021201808060000000006</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">01B6DAA6700395A122DDD2E0D602C96B</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">ACD1C229A745139D</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199001109859</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.57:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">担保/批量打款任务地址</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【JDBC】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="JDBCurl" elementType="Argument">
              <stringProp name="Argument.name">JDBCurl</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://101.37.106.150:3306/bl_user?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库url</stringProp>
            </elementProp>
            <elementProp name="JDBCUsername" elementType="Argument">
              <stringProp name="Argument.name">JDBCUsername</stringProp>
              <stringProp name="Argument.value">ldd_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库用户名</stringProp>
            </elementProp>
            <elementProp name="JDBCPassword" elementType="Argument">
              <stringProp name="Argument.name">JDBCPassword</stringProp>
              <stringProp name="Argument.value">Hello1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库密码${JDBCPassword}</stringProp>
            </elementProp>
            <elementProp name="bl_user" elementType="Argument">
              <stringProp name="Argument.name">bl_user</stringProp>
              <stringProp name="Argument.value">bl_user</stringProp>
              <stringProp name="Argument.desc">数据库bl_user</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bl_biz" elementType="Argument">
              <stringProp name="Argument.name">bl_biz</stringProp>
              <stringProp name="Argument.value">bl_biz</stringProp>
              <stringProp name="Argument.desc">数据库bl_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">tokenId</stringProp>
              <stringProp name="Header.value">${tokenId}</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value"> application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value"> application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值【IP】和【端口】" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ip_BL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${agreement_BL}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="10个账号密码" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">C:\Users\dell\Desktop\account2.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">mobile,projectUserId,projectUserToken,user_id,citizenId,</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登录场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="联合登录login" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="【重置法人实名认证】" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
select user_id from ${bl_biz}.def_project_user_conf WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user_id</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登录" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">userType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">authType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billIds</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="法人实名（实名认证）" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--立即申请" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提示法人实名https://th52.bailingpay.com/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer&#x9;${agreement_BL}" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打开企业认证https://th52.bailingpay.com/bl/api/auth/openCertification" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/openCertification</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--提交身份证" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交身份证（实名认证）https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="法人实名通过/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/realname</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_real，遍历普通参数树，取出可以匹配的参数status********************************&quot;);

//法人实名认证
String authItem = &quot;au_real&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="人脸认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果实名认证通过，则开始人脸识别认证】" enabled="true">
                <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取身份信息/bl/api/base-auth/user/getUser" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1246593992">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:{&quot;realName&quot;:&quot;${name}&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;},&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="人脸识别埋点/bl/api/home/eventLog" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;eventId&quot;:&quot;Face_recognition_view&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/home/eventLog</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-959138156">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:null,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取人脸识别随机数字https://api.megvii.com/faceid/lite/raw/get_random_number" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">projectCode=${projectCode}&amp;projectUserId=${projectUserId}&amp;sign=${sign}&amp;mobile=${mobile}&amp;loginName=${mobile}&amp;appType=APP&amp;devOs=IOS&amp;blackBox=20290111354jmt9pnz7ted&amp;appName=linzi_h5&amp;api_key=50KRj-TQlbKOuIv8ykzQWwm3f3GlPgxF&amp;api_secret=kwUp9S6-OMbWEhTWPoxhk1nGiyEgaJsa&amp;biz_no=20290111354jmt9pnz7ted&amp;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">api.megvii.com</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/faceid/lite/raw/get_random_number </stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取random_number" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">random_number</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;random_number&quot;: &quot;(.+?)&quot;, &quot;token_random_number&quot;: </stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交视频认证/bl/api/base-auth/auth/authFace" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;imageBestUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/24369b7558aa3025.jpg&quot;,&quot;confidence&quot;:90.004,&quot;thresholds&quot;:&quot;{\&quot;1e-3\&quot;:62.169,\&quot;1e-4\&quot;:69.315,\&quot;1e-5\&quot;:74.399,\&quot;1e-6\&quot;:78.038}&quot;,&quot;faceStatus&quot;:1,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authFace</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem = &quot;au_face&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果人脸验证失败，重置法人实名认证】" enabled="true">
                  <stringProp name="IfController.condition">&quot;${au_face_status}&quot;==&quot;INIT&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="初始化实名认证https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="false">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:false}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                    <boolProp name="autocommit">true</boolProp>
                    <stringProp name="checkQuery"></stringProp>
                    <stringProp name="connectionAge">5000</stringProp>
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="dbUrl">${JDBCurl}</stringProp>
                    <stringProp name="driver"></stringProp>
                    <boolProp name="keepAlive">true</boolProp>
                    <stringProp name="password">${JDBCPassword}</stringProp>
                    <stringProp name="poolMax">0</stringProp>
                    <stringProp name="timeout">10000</stringProp>
                    <stringProp name="transactionIsolation">DEFAULT</stringProp>
                    <stringProp name="trimInterval">60000</stringProp>
                    <stringProp name="username">${JDBCUsername}</stringProp>
                  </JDBCDataSource>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
SELECT id FROM ${bl_user}.bl_user where user_name=&apos;${mobile}&apos; and real_name =&apos;${name}&apos;; 
-- SELECT id FROM bl_user.bl_user where user_name=&apos;15216111199&apos; and real_name =&apos;张三&apos;; </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">user_id</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="银行卡绑定" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户信息/bl/api/base-auth/user/getUser" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290116929jmpwhdktijq&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-986140890">&quot;realName&quot;:&quot;${name}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取银行卡列表/bl/api/base-auth/bankcard/queryBankList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/queryBankList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/bankcardtype?routerFrom=auth%2Fbindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankCode" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankName" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取绑卡验证码/bl/api/base-auth/bankcard/getBindCardSms" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;cardNumber&quot;:&quot;${cardNumber}&quot;,&quot;bankName&quot;:&quot;${bankName}&quot;,&quot;bankCode&quot;:&quot;${bankCode}&quot;,&quot;phone&quot;:&quot;${mobile}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/getBindCardSms</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡id bankId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">6000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑定银行卡/bl/api/base-auth/bankcard/bindCard" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;verifyCode&quot;:&quot;6666&quot;,&quot;bankId&quot;:&quot;${bankId}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/bindCard</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑卡设置密码/bl/api/base-auth/bankcard/setPayPassword" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/setPayPassword</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="通讯录认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="加载通讯录联系人/bl/api/base-auth/auth/authAddressList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901171451gl7wftlj7va&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;emergenceName&quot;:&quot;${emergenceName}&quot;,&quot;emergencePhone&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authAddressList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/addresslist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="运营商认证（移动运营商）" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商认证/bl/api/base-auth/auth/authMobile" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商回调（前端）/bl/api/base-auth/auth/syncCallbackMobile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;mobileReqTimeStamp&quot;:&quot;1541064704242&quot;,&quot;mxcode&quot;:&quot;1&quot;,&quot;userName&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/syncCallbackMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/mobileresult?mobileReqTimeStamp=1541064704242&amp;mxcode=2&amp;taskType=carrier&amp;message=%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E6%88%90%E5%8A%9F&amp;loginDone=1&amp;userId=1811011551382979,bailing,http%3A%2F%2F172.16.158.62%3A8203%2Fauth%2FcallbackMobile&amp;account=18758251233&amp;taskId=e849c5f0-ddb8-11e8-813a-00163e13ed1b&amp;marsInfo=ewogICJwcm9qZWN0Q29kZSIgOiAiIiwKICAic2lnbiIgOiAiIiwKICAibW9iaWxlIiA6ICIiLAogICJwcm9qZWN0VXNlclRva2VuIiA6ICIiLAogICJzZGtWZXJzaW9uIiA6ICIyMzAiLAogICJwcm9qZWN0VXNlcklkIiA6ICIiCn0%3D&amp;sdkInfo=ewogICJzZGtWZXJzaW9uIiA6ICIyMzAiCn0%3D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="营业执照认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="营业执照认证/bl/api/base-auth/auth/authBusinessLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;businessName&quot;:&quot;111&quot;,&quot;businessCreditCode&quot;:&quot;222&quot;,&quot;licenseCode&quot;:&quot;&quot;,&quot;licensePicUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/6ced12f0481777cc&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="经营许可证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="经营许可证/bl/api/base-auth/auth/authBusinessPermit" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/ac5e7590ba5f76f5&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessPermit</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="执业医师资格认证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执业医师资格认证/bl/api/base-auth/auth/authVeterinarianLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/717666f037afe317&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authVeterinarianLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="门店认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="门店认证/bl/api/base-auth/auth/authShopPicture" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290118450zj65xib0bc&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/29fc7092797cdd92&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authShopPicture</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/shoppicture</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONObject;  
import org.json.JSONException;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem1 = &quot;au_real&quot;;//法人实名
String authItem2 = &quot;au_face&quot;;//法人人脸识别
String authItem3 = &quot;au_bind&quot;;//法人银行卡认证
String authItem4 = &quot;address_list_auth&quot;;//紧急联系人
String authItem5 = &quot;carrier_auth&quot;;//运营商认证
String authItem6 = &quot;business_license_auth&quot;;//营业执照认证
String authItem7 = &quot;business_permit_auth&quot;;//药品经营许可认证
String authItem8 = &quot;veterinarian_license_auth&quot;;//执业医师资格认证
String authItem9 = &quot;shop_picture_auth&quot;;//医保账户认证

for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem = obj.get(&quot;authItem&quot;);	
	if(authItem.equals(authItem1)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
	if(authItem.equals(authItem2)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}	
	if(authItem.equals(authItem3)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_bind_status&quot;,status);
		log.info(&quot;au_bind_status=&quot;+status);
	}
	if(authItem.equals(authItem4)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;address_list_auth_status&quot;,status);
		log.info(&quot;address_list_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem5)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;carrier_auth_status&quot;,status);
		log.info(&quot;carrier_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem6)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_license_auth_status&quot;,status);
		log.info(&quot;business_license_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem7)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_permit_auth_status&quot;,status);
		log.info(&quot;business_permit_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem8)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;veterinarian_license_auth_status&quot;,status);
		log.info(&quot;veterinarian_license_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem9)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;shop_picture_auth_status&quot;,status);
		log.info(&quot;shop_picture_auth_status=&quot;+status);
	}

}
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="认证资料--提交【如果所有的认证都通过，则提交认证资料】" enabled="true">
            <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_face_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_bind_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${address_list_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${business_license_auth_status}&quot;==&quot;PASSED&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <stringProp name="TestPlan.comments"> &quot;${business_permit_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp;&quot;${veterinarian_license_auth_status}&quot;==&quot;PASSED&quot;  &amp;&amp;  &quot;${shop_picture_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${carrier_auth_status}&quot;==&quot;PASSED&quot; 暂无用</stringProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="认证资料提交&quot;submit&quot;:true,/bl/api/auth/apply" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029021744468fvqfmghqby&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;submit&quot;:true,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;longitude&quot;:&quot;120.205672&quot;,&quot;latitude&quot;:&quot;30.212090&quot;,&quot;authType&quot;:&quot;COMPANY&quot;,&quot;userType&quot;:&quot;A&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取msg" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">msg</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;msg&quot;:&quot;(.+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="提交后强风控未通，则更新状态为通过" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver"></stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取表def_project_user_conf中风控状态Risk_status" enabled="true">
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
-- select status from bl_biz.def_project_user_conf where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
select status from ${bl_biz}.def_project_user_conf where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">Risk_status</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果：强风控未通过，修改状态为预风控通过，再次提交认证" enabled="true">
              <stringProp name="IfController.condition">&quot;${Risk_status_1}&quot; != &quot;STRRISKPASSED&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="更新表def_project_user_conf中status = &apos;PRERISKPASSED&apos;" enabled="true">
                <stringProp name="dataSource">RiskJDBCconnect</stringProp>
                <stringProp name="query">-- 如果：强风控未通过，修改def_project_user_conf状态为预风控通过，再次提交认证
-- update bl_biz.def_project_user_conf set status = &apos;PRERISKPASSED&apos; where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
update ${bl_biz}.def_project_user_conf set status = &apos;STRRISKPASSED&apos; where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">user_id</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="首页场景【区分认证/未认证】" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="登录首页home" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="借款场景" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="初始化可用金额" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                <boolProp name="autocommit">true</boolProp>
                <stringProp name="checkQuery"></stringProp>
                <stringProp name="connectionAge">5000</stringProp>
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="dbUrl">${JDBCurl}</stringProp>
                <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
                <boolProp name="keepAlive">true</boolProp>
                <stringProp name="password">${JDBCPassword}</stringProp>
                <stringProp name="poolMax">0</stringProp>
                <stringProp name="timeout">10000</stringProp>
                <stringProp name="transactionIsolation">DEFAULT</stringProp>
                <stringProp name="trimInterval">60000</stringProp>
                <stringProp name="username">${JDBCUsername}</stringProp>
              </JDBCDataSource>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="query">-- 更新借款金额为99999999
-- select * from bl_biz.def_project_user_conf WHERE project_user_id=&apos;9604&apos; and project_code =&apos;SHBT_AiChong_yonghu&apos;;
update ${bl_biz}.def_project_user_conf set amount = &apos;99999999&apos;,au_amount = &apos;99999999&apos; WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49">1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="借款" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="下单支付【借款申请】 /bl/api/borrow/apply" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202902142953fyay19zjjwv&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;amount&quot;:${amount},&quot;payPassword&quot;:&quot;${password}&quot;,&quot;nper&quot;:${nper},&quot;borrowUse&quot;:&quot;&quot;,&quot;orderNo&quot;:&quot;${__time(,orderNo)}${__Random(1000,9999,)}&quot;,&quot;originals&quot;:&quot;&quot;,&quot;orderSign&quot;:&quot;&quot;,&quot;firstRepayDate&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,time)}&quot;}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/borrow/apply</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value"> ${agreement_BL}://${ip_BL}/blf/borrow/money</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//import org.json.*;
import java.util.Date;  
import java.text.SimpleDateFormat; 

//获取当前时间的毫秒字符串，拼接借款订单号 
Date date = new Date();  
String orderNo = date.getTime() + &quot;123&quot;;
log.info(&quot;orderNo:&quot;+orderNo);
vars.put(&quot;orderNo&quot;,orderNo);

//Date date = new Date();  
//SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);//可以方便地修改日期格式


//java中获取一个月后日期和时间的方法
Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.MONTH, 1);//设置一月后
calendar.set(Calendar.DAY_OF_MONTH,10);//然后设置为第10天
calendar.set(Calendar.HOUR_OF_DAY,23);//设置时间为23点
calendar.set(Calendar.MINUTE,59);  
calendar.set(Calendar.SECOND,59);  
calendar.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay); 
vars.put(&quot;firstRepayDate&quot;,firstDay); </stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【勿删】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;


//显示当前时间
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
Date now = new Date();
System.out.println(&quot;当前时间：&quot; + sdf.format(now));
log.info(&quot;当前时间为：&quot;+sdf.format(now));
String now_date = sdf.format(now);
vars.put(&quot;todayStart&quot;,now_date);


//获取12个月前和6个月后的时间
Calendar nowTime = Calendar.getInstance();
nowTime.add(Calendar.MONTH, -10);//12个月前的时间
log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
String before_month = sdf.format(nowTime.getTime());
vars.put(&quot;before_month12&quot;,before_month);

Calendar nowTime2 = Calendar.getInstance();
nowTime2.add(Calendar.MONTH, 3);//3个月后的时间
log.info(&quot;3个月后的时间为：&quot;+sdf.format(nowTime2.getTime()));
String after_month = sdf.format(nowTime2.getTime());
vars.put(&quot;after_month3&quot;,after_month);

//获取30分钟后和30分钟前的时间
Calendar nowTime3 = Calendar.getInstance();
nowTime3.add(Calendar.MINUTE, 30);//30分钟后的时间
log.info(&quot;30分钟后的时间为：&quot;+sdf.format(nowTime3.getTime()));
Calendar nowTime4 = Calendar.getInstance();
nowTime4.add(Calendar.MINUTE, -30);//30分钟前的时间
log.info(&quot;30分钟前的时间为：&quot;+sdf.format(nowTime4.getTime()));

//生成随机数，Math.random()生成0~1的小数，即0&lt;a&lt;1，Math.ceil(a)四舍五入，使用new Double(a).intValue()取整数。
double a = Math.random()*1000000;
a = Math.ceil(a);
int randomSource = new Double(a).intValue();
log.info(&quot;*********生成智能筛选项目名称的随机数randomSource:&quot;+randomSource+&quot;**********************&quot;);

//将生成的智能筛选和随机数拼装，并存入参数。
String projectName = &quot;智能筛选&quot;+randomSource;
vars.put(&quot;projectName2&quot;,projectName);
log.info(&quot;*********生成智能筛选项目名称projectName2:&quot;+projectName+&quot;**********************&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用勿删】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;

//获取前一个月第一天
Calendar calendar1 = Calendar.getInstance();
calendar1.add(Calendar.MONTH, -1);//获取前一月
calendar1.set(Calendar.DAY_OF_MONTH,2);//然后设置为第11天
calendar1.set(Calendar.HOUR_OF_DAY,12);//设置时间为12点
calendar1.set(Calendar.MINUTE,0);  
calendar1.set(Calendar.SECOND,0);  
calendar1.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar1.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay);

//将时间字符串转换成unix时间戳
long epoch = sdf.parse(firstDay).getTime();
log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@:&quot;+epoch); 
vars.put(&quot;before_month1&quot;,epoch.toString());


//获取前一个月最后一天
Calendar calendar2 = Calendar.getInstance();
calendar2.set(Calendar.DAY_OF_MONTH, 0);
String lastDay = sdf.format(calendar2.getTime());

        
////第一种时间转换格式
//Date cur = new Date();  
//Calendar calendar = new GregorianCalendar();  
////calendar.add(Calendar.DAY_OF_MONTH,-1);  //今天往前一天（月/年），然后计算最早和最晚时间
//
////一天的开始时间 yyyy:MM:dd 00:00:00 ；如2018-04-12 00:00:00
//calendar.set(Calendar.HOUR_OF_DAY,0);  
//calendar.set(Calendar.MINUTE,0);  
//calendar.set(Calendar.SECOND,0);  
//calendar.set(Calendar.MILLISECOND,0);  
//Date dayStart = calendar.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天凌晨dayStart:&quot;+startStr);
//vars.put(&quot;todayStart&quot;,startStr);
//
//
////一天的结束时间 yyyy:MM:dd 23:59:59  
//calendar.set(Calendar.HOUR_OF_DAY,23);  
//calendar.set(Calendar.MINUTE,59);  
//calendar.set(Calendar.SECOND,59);  
//calendar.set(Calendar.MILLISECOND,999);  
//Date dayEnd = calendar.getTime();  
//String endStr = simpleDateFormat.format(dayEnd);  
//log.info(&quot;今天结束时间dayEnd:&quot;+endStr);
//vars.put(&quot;todayEnd&quot;,endStr);
//
////计算今天往前1天，然后计算时间16点，如2018-04-11T16:00:00.000Z
//Calendar calendar2 = new GregorianCalendar();  
//calendar2.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar2.set(Calendar.HOUR_OF_DAY,16);  
//calendar2.set(Calendar.MINUTE,0);  
//calendar2.set(Calendar.SECOND,0);  
//calendar2.set(Calendar.MILLISECOND,0);  
//Date dayStart2 = calendar2.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr2 = simpleDateFormat.format(dayStart2);  
//log.info(&quot;今天往前1天16点before_day1:&quot;+startStr2);
//vars.put(&quot;before_day1&quot;,startStr2);
//
//
////计算今天往前12月，然后计算凌晨;如2017-04-12 00:00:00
//Calendar calendar1 = new GregorianCalendar();  
//calendar1.add(Calendar.MONTH, -12);  //今天往前12月 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar1.set(Calendar.HOUR_OF_DAY,0);  
//calendar1.set(Calendar.MINUTE,0);  
//calendar1.set(Calendar.SECOND,0);  
//calendar1.set(Calendar.MILLISECOND,0);  
//Date dayStart1 = calendar1.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr1 = simpleDateFormat.format(dayStart1);  
//log.info(&quot;今天往前12个月凌晨before_month12:&quot;+startStr1);
//vars.put(&quot;before_month12&quot;,startStr1);
//
////计算今天往前12个月再往前1天，然后计算16点；如2017-04-11T16:00:00.000Z
//Calendar calendar3 = new GregorianCalendar();  
//calendar3.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
//calendar3.add(Calendar.MONTH, -12);  //今天再往前12个月
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar3.set(Calendar.HOUR_OF_DAY,16);  
//calendar3.set(Calendar.MINUTE,0);  
//calendar3.set(Calendar.SECOND,0);  
//calendar3.set(Calendar.MILLISECOND,0);  
//Date dayStart3 = calendar3.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr3 = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天往前12个月又1天16点before_month12_1:&quot;+startStr3);
//vars.put(&quot;before_month12_1&quot;,startStr3);


//
////第二种时间转换格式
//long current=System.currentTimeMillis();//当前时间毫秒数
//long zero=current/(1000*3600*24)*(1000*3600*24)-TimeZone.getDefault().getRawOffset();//今天零点零分零秒的毫秒数
//long twelve=zero+24*60*60*1000-1;//今天23点59分59秒的毫秒数
//
//log.info(&quot;当前时间毫秒数:&quot;+current.toString());
//log.info(&quot;今天零点零分零秒的毫秒数:&quot;+zero.toString());
//log.info(&quot;今天23点59分59秒的毫秒数:&quot;+twelve.toString());
//
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);    
//log.info(&quot;当前时间:&quot;+sdf.format(current)); 
//log.info(&quot;今天零点零分零秒:&quot;+sdf.format(zero));       
//log.info(&quot;今天23点59分59秒:&quot;+sdf.format(twelve));   
//
////第三种时间转换格式
////显示当前时间
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
//Date now = new Date();
//System.out.println(&quot;当前时间：&quot; + sdf.format(now));
//log.info(&quot;当前时间为：&quot;+sdf.format(now));
//String now_date = sdf.format(now);
//vars.put(&quot;now_date&quot;,now_date);
//
////获取12个月前的时间
//Calendar nowTime = Calendar.getInstance();
//nowTime.add(Calendar.MONTH, -12);//12个月前的时间
//log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
//String before_month = sdf.format(nowTime.getTime());
//vars.put(&quot;before_month12&quot;,before_month);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="还款场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="执行打款任务" enabled="false"/>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="更新bl_stage_borrow的gmt_create为昨天" enabled="true">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">
-- update bl_biz.bl_stage_borrow set gmt_create = &apos;2018-11-29 10:58:19&apos; where project_code = &apos;SHBT_QuanC_yonghu&apos; and status = &apos;APPLYING&apos;;
update ${bl_biz}.bl_stage_borrow set gmt_create = &apos;${firstDay}&apos; where project_code = &apos;${projectCode}&apos; and status = &apos;APPLYING&apos;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//import org.json.*;
import java.util.Date;  
import java.text.SimpleDateFormat; 

Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.DATE, -1); //得到前一天
Date date = calendar.getTime();
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(date);
log.info(&quot;firstDay-----------&quot;+firstDay); 
vars.put(&quot;firstDay&quot;,firstDay); </stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【批量打款】调定时任务" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${ip_quartz}/quartz/payout/upsMorePay</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【还款前执行】调担保打款定时任务http://172.16.158.57:8201/quartz/payout/guaranteePayout" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${ip_quartz}/quartz/payout/guaranteePayout</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="待还款订单数" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询def_project_user_conf的user_id" enabled="false">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">-- select user_id from bl_biz.def_project_user_conf WHERE project_user_id=&apos;9604&apos; and project_code =&apos;SHBT_AiChong_yonghu&apos;;
-- 查询def_project_user_conf的user_id
select user_id from bl_biz.def_project_user_conf WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">user_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询bl_stage_borrow_bill的待付款单数" enabled="true">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">
-- 查询bl_stage_borrow_bill的待付款单数
select count(*) from bl_biz.bl_stage_borrow_bill where user_id = &apos;${user_id}&apos; and project_code = &apos;${projectCode}&apos; and status = &apos;WAITREPAY&apos;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${count_1}</stringProp>
          </LoopController>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询最新一条待还款订单id,borrow_id,capital_amount" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billIds</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billAmount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billAmount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default">0</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                <boolProp name="autocommit">true</boolProp>
                <stringProp name="checkQuery"></stringProp>
                <stringProp name="connectionAge">5000</stringProp>
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="dbUrl">${JDBCurl}</stringProp>
                <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
                <boolProp name="keepAlive">true</boolProp>
                <stringProp name="password">${JDBCPassword}</stringProp>
                <stringProp name="poolMax">0</stringProp>
                <stringProp name="timeout">10000</stringProp>
                <stringProp name="transactionIsolation">DEFAULT</stringProp>
                <stringProp name="trimInterval">60000</stringProp>
                <stringProp name="username">${JDBCUsername}</stringProp>
              </JDBCDataSource>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询bl_stage_borrow_bill最新一条待还款订单id,borrow_id,capital_amount" enabled="true">
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">-- 根据billIds查询borrow_id
-- select borrow_id from bl_biz.bl_stage_borrow_bill where id = &apos;2555&apos;;
-- select borrow_id from ${bl_biz}.bl_stage_borrow_bill where id = &apos;${billIds}&apos;;

-- 查询最新一条待还款订单
-- select id,borrow_id from bl_biz.bl_stage_borrow_bill where user_id = &apos;947278037823580934&apos; and project_code = &apos;SHBT_AiChong_yonghu&apos; and status = &apos;WAITREPAY&apos; order by id desc limit 1;
select id,borrow_id,capital_amount from ${bl_biz}.bl_stage_borrow_bill where user_id = &apos;${user_id}&apos; and project_code = &apos;${projectCode}&apos; and status = &apos;WAITREPAY&apos; order by id desc limit 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">billIds,borrow_id,capital_amount</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${capital_amount_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1银行卡--提交还款/bl/api/repayment/repay" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${__MD5(${mobile}${projectCode}${projectUserId}${key},sign)}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290215197tl7iyb4y5ve&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;repaymentAmount&quot;:${capital_amount_1},&quot;couponId&quot;:&quot;&quot;,&quot;rebateAmount&quot;:0,&quot;payPwd&quot;:&quot;${password}&quot;,&quot;cardId&quot;:${cardId},&quot;actualAmount&quot;:&quot;${capital_amount_1}&quot;,&quot;billIds&quot;:&quot;${billIds_1}&quot;,&quot;borrowId&quot;:&quot;${borrow_id_1}&quot;,&quot;authPaySwitch&quot;:&quot;&quot;,&quot;repayType&quot;:&quot;bankPay&quot;,&quot;thirdRebateAmount&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/repayment/repay</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">0</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">0</stringProp>
        <stringProp name="Stop users count">0</stringProp>
        <stringProp name="Stop users period">0</stringProp>
        <stringProp name="flighttime">0</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数【爱宠测试18758251233】" enabled="false">
          <collectionProp name="UserParameters.names">
            <stringProp name="-309387644">program</stringProp>
            <stringProp name="1317234335">agreement_BL</stringProp>
            <stringProp name="100399714">ip_BL</stringProp>
            <stringProp name="-1068855134">mobile</stringProp>
            <stringProp name="-940361562">projectCode</stringProp>
            <stringProp name="1053935061">projectUserToken</stringProp>
            <stringProp name="-1225265473">projectUserId</stringProp>
            <stringProp name="106079">key</stringProp>
            <stringProp name="3373707">name</stringProp>
            <stringProp name="-1539781981">citizenId</stringProp>
            <stringProp name="-1859605943">bankCode</stringProp>
            <stringProp name="-1859291417">bankName</stringProp>
            <stringProp name="508016249">cardNumber</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-197874264">emergenceName</stringProp>
            <stringProp name="-1413853096">amount</stringProp>
            <stringProp name="3387887">nper</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1418242893">ip_quartz</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="257289329">
              <stringProp name="929679">爱宠</stringProp>
              <stringProp name="99617003">https</stringProp>
              <stringProp name="673446295">th53.bailingpay.com</stringProp>
              <stringProp name="920274007">18758251233</stringProp>
              <stringProp name="-1344179528">SHBT_AiChong_yonghu</stringProp>
              <stringProp name="1400216164">9d4d5084762588e2f25f3356af47fd43</stringProp>
              <stringProp name="1751521">9604</stringProp>
              <stringProp name="343802270">OBCQ1CFUUY6C97E2</stringProp>
              <stringProp name="842061">李四</stringProp>
              <stringProp name="-292463435">110101199004071219</stringProp>
              <stringProp name="66840">CMB</stringProp>
              <stringProp name="776116513">招商银行</stringProp>
              <stringProp name="-1708566968">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="-1376477086">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="809225800">李四¥@</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="54554">758</stringProp>
              <stringProp name="2083806793">http://172.16.158.74:8201</stringProp>
            </collectionProp>
            <collectionProp name="-1297933900">
              <stringProp name="702703">古道</stringProp>
              <stringProp name="99617003">https</stringProp>
              <stringProp name="1183980472">th52.bailingpay.com</stringProp>
              <stringProp name="595684475">15757176952</stringProp>
              <stringProp name="-1172263644">CGBT_GuDYC_yonghu</stringProp>
              <stringProp name="471426409">650404A0E6E27F3F7DDE3AFB7237EF94</stringProp>
              <stringProp name="1448639875">100510</stringProp>
              <stringProp name="-1451033919">0B6122EFFDFA9E3A</stringProp>
              <stringProp name="842061">李四</stringProp>
              <stringProp name="1340114059">11010119900107545X</stringProp>
              <stringProp name="66840">CMB</stringProp>
              <stringProp name="776116513">招商银行</stringProp>
              <stringProp name="-1708566968">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="-1376477086">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="809225800">李四¥@</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="54554">758</stringProp>
              <stringProp name="1139044810">http://172.16.158.62:8201</stringProp>
            </collectionProp>
            <collectionProp name="711755411">
              <stringProp name="961294">百凌</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1172518888">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【通用参数】" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th53.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mobile" elementType="Argument">
              <stringProp name="Argument.name">mobile</stringProp>
              <stringProp name="Argument.value">18758251233</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">SHBT_AiChong_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserId" elementType="Argument">
              <stringProp name="Argument.name">projectUserId</stringProp>
              <stringProp name="Argument.value">9604</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">9d4d5084762588e2f25f3356af47fd43</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">OBCQ1CFUUY6C97E2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199004071219</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.74:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【全材通用参数】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th54.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mobile" elementType="Argument">
              <stringProp name="Argument.name">mobile</stringProp>
              <stringProp name="Argument.value">15757176952</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">CGBT_XPX_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserId" elementType="Argument">
              <stringProp name="Argument.name">projectUserId</stringProp>
              <stringProp name="Argument.value">8021201808060000000006</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">01B6DAA6700395A122DDD2E0D602C96B</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">0C9820D122CBB549</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">张三</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199001109859</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">55587a910882016321201e6ebbc9f595</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.57:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">担保/批量打款任务地址</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【JDBC】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="JDBCurl" elementType="Argument">
              <stringProp name="Argument.name">JDBCurl</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://101.37.106.150:3306/bl_user?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库url</stringProp>
            </elementProp>
            <elementProp name="JDBCUsername" elementType="Argument">
              <stringProp name="Argument.name">JDBCUsername</stringProp>
              <stringProp name="Argument.value">ldd_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库用户名</stringProp>
            </elementProp>
            <elementProp name="JDBCPassword" elementType="Argument">
              <stringProp name="Argument.name">JDBCPassword</stringProp>
              <stringProp name="Argument.value">Hello1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库密码${JDBCPassword}</stringProp>
            </elementProp>
            <elementProp name="bl_user" elementType="Argument">
              <stringProp name="Argument.name">bl_user</stringProp>
              <stringProp name="Argument.value">bl_user</stringProp>
              <stringProp name="Argument.desc">数据库bl_user</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bl_biz" elementType="Argument">
              <stringProp name="Argument.name">bl_biz</stringProp>
              <stringProp name="Argument.value">bl_biz</stringProp>
              <stringProp name="Argument.desc">数据库bl_biz</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">tokenId</stringProp>
              <stringProp name="Header.value">${tokenId}</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value"> application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value"> application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值【IP】和【端口】" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ip_BL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${agreement_BL}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV并发用户数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">C:\Users\linzi\Desktop\测试用户.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">mobile,projectUserId,projectUserToken,user_id,citizenId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登录场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="联合登录login" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证场景" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="【重置法人实名认证】" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
select user_id from ${bl_biz}.def_project_user_conf WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user_id</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">au_face_init</stringProp>
              <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="认证" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登录" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">userType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">authType</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billIds</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="法人实名（实名认证）" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--立即申请" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提示法人实名https://th52.bailingpay.com/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer&#x9;${agreement_BL}" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打开企业认证https://th52.bailingpay.com/bl/api/auth/openCertification" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/openCertification</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="企业认证--提交身份证" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交身份证（实名认证）https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="法人实名通过/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290110445099n790fwr9b&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/realname</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_real，遍历普通参数树，取出可以匹配的参数status********************************&quot;);

//法人实名认证
String authItem = &quot;au_real&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="人脸认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果实名认证通过，则开始人脸识别认证】" enabled="true">
                <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取身份信息/bl/api/base-auth/user/getUser" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1246593992">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:{&quot;realName&quot;:&quot;${name}&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;},&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="人脸识别埋点/bl/api/home/eventLog" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;eventId&quot;:&quot;Face_recognition_view&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/home/eventLog</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-959138156">{&quot;code&quot;:&quot;000000&quot;,&quot;data&quot;:null,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取人脸识别随机数字https://api.megvii.com/faceid/lite/raw/get_random_number" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">projectCode=${projectCode}&amp;projectUserId=${projectUserId}&amp;sign=${sign}&amp;mobile=${mobile}&amp;loginName=${mobile}&amp;appType=APP&amp;devOs=IOS&amp;blackBox=20290111354jmt9pnz7ted&amp;appName=linzi_h5&amp;api_key=50KRj-TQlbKOuIv8ykzQWwm3f3GlPgxF&amp;api_secret=kwUp9S6-OMbWEhTWPoxhk1nGiyEgaJsa&amp;biz_no=20290111354jmt9pnz7ted&amp;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">api.megvii.com</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/faceid/lite/raw/get_random_number </stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/video</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取random_number" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">random_number</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;random_number&quot;: &quot;(.+?)&quot;, &quot;token_random_number&quot;: </stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交视频认证/bl/api/base-auth/auth/authFace" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;imageBestUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/24369b7558aa3025.jpg&quot;,&quot;confidence&quot;:90.004,&quot;thresholds&quot;:&quot;{\&quot;1e-3\&quot;:62.169,\&quot;1e-4\&quot;:69.315,\&quot;1e-5\&quot;:74.399,\&quot;1e-6\&quot;:78.038}&quot;,&quot;faceStatus&quot;:1,&quot;unique&quot;:true}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authFace</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem = &quot;au_face&quot;;
for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem2 = obj.get(&quot;authItem&quot;);
	if(authItem2.equals(authItem)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}
}
</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="【场景：如果人脸验证失败，重置法人实名认证】" enabled="true">
                  <stringProp name="IfController.condition">&quot;${au_face_status}&quot;==&quot;INIT&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="初始化实名认证https://th52.bailingpay.com/bl/api/base-auth/auth/authRealName" enabled="false">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290111354jmt9pnz7ted&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;citizenId&quot;:&quot;${citizenId}&quot;,&quot;name&quot;:&quot;${name}&quot;,&quot;unique&quot;:false}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authRealName</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                    <boolProp name="autocommit">true</boolProp>
                    <stringProp name="checkQuery"></stringProp>
                    <stringProp name="connectionAge">5000</stringProp>
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="dbUrl">${JDBCurl}</stringProp>
                    <stringProp name="driver"></stringProp>
                    <boolProp name="keepAlive">true</boolProp>
                    <stringProp name="password">${JDBCPassword}</stringProp>
                    <stringProp name="poolMax">0</stringProp>
                    <stringProp name="timeout">10000</stringProp>
                    <stringProp name="transactionIsolation">DEFAULT</stringProp>
                    <stringProp name="trimInterval">60000</stringProp>
                    <stringProp name="username">${JDBCUsername}</stringProp>
                  </JDBCDataSource>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
SELECT id FROM ${bl_user}.bl_user where user_name=&apos;${mobile}&apos; and real_name =&apos;${name}&apos;; 
-- SELECT id FROM bl_user.bl_user where user_name=&apos;15216111199&apos; and real_name =&apos;张三&apos;; </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">user_id</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                    <stringProp name="dataSource">au_face_init</stringProp>
                    <stringProp name="query">
-- 徐进琦
#用户登录信息初始化
UPDATE `${bl_user}`.`bl_user_login` SET `auth_status` =&apos;INIT&apos; ,user_id =&apos;&apos;,auth_value=&apos;&apos; WHERE `third_user_id` =&apos;${projectUserId}&apos;;
#预风控初始化
UPDATE ${bl_biz}.def_project_user_conf SET `status`=&apos;INIT&apos;,user_id=&apos;&apos;,gmt_strong_risk=null WHERE project_user_id=&apos;${projectUserId}&apos;;
#认证信息初始化
UPDATE ${bl_user}.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;${user_id_1}&apos;;

update ${bl_user}.bl_user_bankcard set is_main = 0 where user_id=&apos;${user_id_1}&apos;;
--
-- #认证信息初始化
-- UPDATE bl_user.bl_user_authInfo SET `status` =&apos;0&apos; WHERE `user_id` =&apos;883213481036278533&apos;;
--
-- update bl_user.bl_user_bankcard set is_main = 0 where user_id=883213481036278533;
</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="银行卡绑定" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户信息/bl/api/base-auth/user/getUser" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290116929jmpwhdktijq&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-986140890">&quot;realName&quot;:&quot;${name}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取银行卡列表/bl/api/base-auth/bankcard/queryBankList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/queryBankList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/bankcardtype?routerFrom=auth%2Fbindbankcard</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankCode" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡bankName" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankCode&quot;:&quot;(.+?)&quot;,&quot;bankName&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取绑卡验证码/bl/api/base-auth/bankcard/getBindCardSms" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;cardNumber&quot;:&quot;${cardNumber}&quot;,&quot;bankName&quot;:&quot;${bankName}&quot;,&quot;bankCode&quot;:&quot;${bankCode}&quot;,&quot;phone&quot;:&quot;${mobile}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/getBindCardSms</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取银行卡id bankId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">bankId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;bankId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">6000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑定银行卡/bl/api/base-auth/bankcard/bindCard" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;verifyCode&quot;:&quot;6666&quot;,&quot;bankId&quot;:&quot;${bankId}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/bindCard</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绑卡设置密码/bl/api/base-auth/bankcard/setPayPassword" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;idNumber&quot;:&quot;${citizenId}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/setPayPassword</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard?queryObj=%7B%22bankName%22%3A%22%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%22,%22bankCode%22%3A%22CMB%22%7D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="通讯录认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="加载通讯录联系人/bl/api/base-auth/auth/authAddressList" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901171451gl7wftlj7va&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;emergenceName&quot;:&quot;${emergenceName}&quot;,&quot;emergencePhone&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authAddressList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/addresslist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="运营商认证（移动运营商）" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商认证/bl/api/base-auth/auth/authMobile" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运营商回调（前端）/bl/api/base-auth/auth/syncCallbackMobile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;mobileReqTimeStamp&quot;:&quot;1541064704242&quot;,&quot;mxcode&quot;:&quot;1&quot;,&quot;userName&quot;:&quot;${mobile}&quot;,&quot;unique&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/syncCallbackMobile</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/mobileresult?mobileReqTimeStamp=1541064704242&amp;mxcode=2&amp;taskType=carrier&amp;message=%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E6%88%90%E5%8A%9F&amp;loginDone=1&amp;userId=1811011551382979,bailing,http%3A%2F%2F172.16.158.62%3A8203%2Fauth%2FcallbackMobile&amp;account=18758251233&amp;taskId=e849c5f0-ddb8-11e8-813a-00163e13ed1b&amp;marsInfo=ewogICJwcm9qZWN0Q29kZSIgOiAiIiwKICAic2lnbiIgOiAiIiwKICAibW9iaWxlIiA6ICIiLAogICJwcm9qZWN0VXNlclRva2VuIiA6ICIiLAogICJzZGtWZXJzaW9uIiA6ICIyMzAiLAogICJwcm9qZWN0VXNlcklkIiA6ICIiCn0%3D&amp;sdkInfo=ewogICJzZGtWZXJzaW9uIiA6ICIyMzAiCn0%3D</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="营业执照认证" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="营业执照认证/bl/api/base-auth/auth/authBusinessLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;businessName&quot;:&quot;111&quot;,&quot;businessCreditCode&quot;:&quot;222&quot;,&quot;licenseCode&quot;:&quot;&quot;,&quot;licensePicUrl&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/6ced12f0481777cc&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="经营许可证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="经营许可证/bl/api/base-auth/auth/authBusinessPermit" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/ac5e7590ba5f76f5&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authBusinessPermit</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesslicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="执业医师资格认证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执业医师资格认证/bl/api/base-auth/auth/authVeterinarianLicense" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;code&quot;:&quot;111&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/717666f037afe317&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authVeterinarianLicense</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/businesspermit</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="门店认证" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="门店认证/bl/api/base-auth/auth/authShopPicture" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290118450zj65xib0bc&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;url&quot;:&quot;http://fenxinapp.oss-cn-hangzhou.aliyuncs.com/test/29fc7092797cdd92&quot;,&quot;unique&quot;:false}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/base-auth/auth/authShopPicture</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1570774805">{&quot;code&quot;:&quot;000000&quot;,&quot;msg&quot;:&quot;成功&quot;}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/shoppicture</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拉取验证结果/bl/api/auth/apply" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029011731386t4eft06hwd&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;authType&quot;:&quot;${authType}&quot;,&quot;userType&quot;:&quot;${userType}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/veterinarianlicense</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">//import org.json.*;
import org.json.JSONArray;  
import org.json.JSONObject;  
import org.json.JSONException;  

prev.setDataEncoding(&quot;UTF-8&quot;);
String response_data = prev.getResponseDataAsString();
JSONObject data_obj = new JSONObject(response_data);
log.info(&quot;data_obj:&quot;+data_obj);
JSONArray data_list = data_obj.get(&quot;data&quot;).get(&quot;authItems&quot;);
log.info(&quot;authItems:&quot;+data_list);

log.info(&quot;**********根据参数名称au_face，遍历普通参数树，取出可以匹配的参数status********************************&quot;);
//法人人脸识别
String authItem1 = &quot;au_real&quot;;//法人实名
String authItem2 = &quot;au_face&quot;;//法人人脸识别
String authItem3 = &quot;au_bind&quot;;//法人银行卡认证
String authItem4 = &quot;address_list_auth&quot;;//紧急联系人
String authItem5 = &quot;carrier_auth&quot;;//运营商认证
String authItem6 = &quot;business_license_auth&quot;;//营业执照认证
String authItem7 = &quot;business_permit_auth&quot;;//药品经营许可认证
String authItem8 = &quot;veterinarian_license_auth&quot;;//执业医师资格认证
String authItem9 = &quot;shop_picture_auth&quot;;//医保账户认证

for(int i=0;i&lt;data_list.length();i++){
	JSONObject obj = data_list.get(i);
	String authItem = obj.get(&quot;authItem&quot;);	
	if(authItem.equals(authItem1)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_real_status&quot;,status);
		log.info(&quot;au_real_status=&quot;+status);
	}
	if(authItem.equals(authItem2)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_face_status&quot;,status);
		log.info(&quot;au_face_status=&quot;+status);
	}	
	if(authItem.equals(authItem3)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;au_bind_status&quot;,status);
		log.info(&quot;au_bind_status=&quot;+status);
	}
	if(authItem.equals(authItem4)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;address_list_auth_status&quot;,status);
		log.info(&quot;address_list_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem5)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;carrier_auth_status&quot;,status);
		log.info(&quot;carrier_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem6)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_license_auth_status&quot;,status);
		log.info(&quot;business_license_auth_status=&quot;+status);
	}	
	if(authItem.equals(authItem7)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;business_permit_auth_status&quot;,status);
		log.info(&quot;business_permit_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem8)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;veterinarian_license_auth_status&quot;,status);
		log.info(&quot;veterinarian_license_auth_status=&quot;+status);
	}
	if(authItem.equals(authItem9)){
		String status = obj.get(&quot;status&quot;);
		vars.put(&quot;shop_picture_auth_status&quot;,status);
		log.info(&quot;shop_picture_auth_status=&quot;+status);
	}

}
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="认证资料--提交【如果所有的认证都通过，则提交认证资料】" enabled="true">
            <stringProp name="IfController.condition">&quot;${au_real_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_face_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${au_bind_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${address_list_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${business_license_auth_status}&quot;==&quot;PASSED&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <stringProp name="TestPlan.comments"> &quot;${business_permit_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp;&quot;${veterinarian_license_auth_status}&quot;==&quot;PASSED&quot;  &amp;&amp;  &quot;${shop_picture_auth_status}&quot;==&quot;PASSED&quot; &amp;&amp; &quot;${carrier_auth_status}&quot;==&quot;PASSED&quot; 暂无用</stringProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="认证资料提交&quot;submit&quot;:true,/bl/api/auth/apply" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;2029021744468fvqfmghqby&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;submit&quot;:true,&quot;contacts&quot;:&quot;${emergenceName}:${mobile}&quot;,&quot;longitude&quot;:&quot;120.205672&quot;,&quot;latitude&quot;:&quot;30.212090&quot;,&quot;authType&quot;:&quot;COMPANY&quot;,&quot;userType&quot;:&quot;A&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/auth/apply</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/merchantinfolist</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取msg" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">msg</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;msg&quot;:&quot;(.+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="提交后强风控未通，则更新状态为通过" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver"></stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取表def_project_user_conf中风控状态Risk_status" enabled="true">
              <stringProp name="dataSource">RiskJDBCconnect</stringProp>
              <stringProp name="query">-- 查询指定手机和实名的用户id,15216111199,张三
-- select status from bl_biz.def_project_user_conf where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
select status from ${bl_biz}.def_project_user_conf where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">Risk_status</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果：强风控未通过，修改状态为预风控通过，再次提交认证" enabled="true">
              <stringProp name="IfController.condition">&quot;${Risk_status_1}&quot; != &quot;STRRISKPASSED&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="更新表def_project_user_conf中status = &apos;PRERISKPASSED&apos;" enabled="true">
                <stringProp name="dataSource">RiskJDBCconnect</stringProp>
                <stringProp name="query">-- 如果：强风控未通过，修改def_project_user_conf状态为预风控通过，再次提交认证
-- update bl_biz.def_project_user_conf set status = &apos;PRERISKPASSED&apos; where project_code = &apos;CGBT_GuDYC_yonghu&apos; and project_user_id =&apos;101951&apos;;
update ${bl_biz}.def_project_user_conf set status = &apos;STRRISKPASSED&apos; where project_code = &apos;${projectCode}&apos; and project_user_id =&apos;${projectUserId}&apos;;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">user_id</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="首页场景【区分认证/未认证】" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="登录首页home" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="借款场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date; 
import java.util.Calendar; 
import java.text.SimpleDateFormat; 
import java.util.Random;
import java.math.BigInteger;  
//import java.util.*; 
	
//java中获取当前日期和时间的方法
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);//可以方便地修改日期格式

String hehe = dateFormat.format( now ); 
log.info(&quot;日期：&quot;+hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改
int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
log.info(year + &quot;/&quot; + month + &quot;/&quot; + date + &quot; &quot; +hour + &quot;:&quot; +minute + &quot;:&quot; + second); 
int num = year+month+date+hour+minute+second;
log.info(&quot;num:&quot;+num);
double num2 =  Math.random();//toString(36);//substr(2);
log.info(&quot;num2:&quot;+num2);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="初始化可用金额" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                <boolProp name="autocommit">true</boolProp>
                <stringProp name="checkQuery"></stringProp>
                <stringProp name="connectionAge">5000</stringProp>
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="dbUrl">${JDBCurl}</stringProp>
                <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
                <boolProp name="keepAlive">true</boolProp>
                <stringProp name="password">${JDBCPassword}</stringProp>
                <stringProp name="poolMax">0</stringProp>
                <stringProp name="timeout">10000</stringProp>
                <stringProp name="transactionIsolation">DEFAULT</stringProp>
                <stringProp name="trimInterval">60000</stringProp>
                <stringProp name="username">${JDBCUsername}</stringProp>
              </JDBCDataSource>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="query">-- 更新借款金额为99999999
-- select * from bl_biz.def_project_user_conf WHERE project_user_id=&apos;9604&apos; and project_code =&apos;SHBT_AiChong_yonghu&apos;;
update ${bl_biz}.def_project_user_conf set amount = &apos;99999999&apos;,au_amount = &apos;99999999&apos; WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="借款" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="下单支付【借款申请】 /bl/api/borrow/apply" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202902142953fyay19zjjwv&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;amount&quot;:${amount},&quot;payPassword&quot;:&quot;${password}&quot;,&quot;nper&quot;:${nper},&quot;borrowUse&quot;:&quot;&quot;,&quot;orderNo&quot;:&quot;${__time(,orderNo)}${__Random(1000,9999,)}&quot;,&quot;originals&quot;:&quot;&quot;,&quot;orderSign&quot;:&quot;&quot;,&quot;firstRepayDate&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,time)}&quot;}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/borrow/apply</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value"> ${agreement_BL}://${ip_BL}/blf/borrow/money</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//import org.json.*;
import java.util.Date;  
import java.text.SimpleDateFormat; 

//获取当前时间的毫秒字符串，拼接借款订单号 
Date date = new Date();  
String orderNo = date.getTime() + &quot;123&quot;;
log.info(&quot;orderNo:&quot;+orderNo);
vars.put(&quot;orderNo&quot;,orderNo);

//Date date = new Date();  
//SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);//可以方便地修改日期格式


//java中获取一个月后日期和时间的方法
Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.MONTH, 1);//设置一月后
calendar.set(Calendar.DAY_OF_MONTH,10);//然后设置为第10天
calendar.set(Calendar.HOUR_OF_DAY,23);//设置时间为23点
calendar.set(Calendar.MINUTE,59);  
calendar.set(Calendar.SECOND,59);  
calendar.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay); 
vars.put(&quot;firstRepayDate&quot;,firstDay); </stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【勿删】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;


//显示当前时间
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
Date now = new Date();
System.out.println(&quot;当前时间：&quot; + sdf.format(now));
log.info(&quot;当前时间为：&quot;+sdf.format(now));
String now_date = sdf.format(now);
vars.put(&quot;todayStart&quot;,now_date);


//获取12个月前和6个月后的时间
Calendar nowTime = Calendar.getInstance();
nowTime.add(Calendar.MONTH, -10);//12个月前的时间
log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
String before_month = sdf.format(nowTime.getTime());
vars.put(&quot;before_month12&quot;,before_month);

Calendar nowTime2 = Calendar.getInstance();
nowTime2.add(Calendar.MONTH, 3);//3个月后的时间
log.info(&quot;3个月后的时间为：&quot;+sdf.format(nowTime2.getTime()));
String after_month = sdf.format(nowTime2.getTime());
vars.put(&quot;after_month3&quot;,after_month);

//获取30分钟后和30分钟前的时间
Calendar nowTime3 = Calendar.getInstance();
nowTime3.add(Calendar.MINUTE, 30);//30分钟后的时间
log.info(&quot;30分钟后的时间为：&quot;+sdf.format(nowTime3.getTime()));
Calendar nowTime4 = Calendar.getInstance();
nowTime4.add(Calendar.MINUTE, -30);//30分钟前的时间
log.info(&quot;30分钟前的时间为：&quot;+sdf.format(nowTime4.getTime()));

//生成随机数，Math.random()生成0~1的小数，即0&lt;a&lt;1，Math.ceil(a)四舍五入，使用new Double(a).intValue()取整数。
double a = Math.random()*1000000;
a = Math.ceil(a);
int randomSource = new Double(a).intValue();
log.info(&quot;*********生成智能筛选项目名称的随机数randomSource:&quot;+randomSource+&quot;**********************&quot;);

//将生成的智能筛选和随机数拼装，并存入参数。
String projectName = &quot;智能筛选&quot;+randomSource;
vars.put(&quot;projectName2&quot;,projectName);
log.info(&quot;*********生成智能筛选项目名称projectName2:&quot;+projectName+&quot;**********************&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用勿删】BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;

//获取前一个月第一天
Calendar calendar1 = Calendar.getInstance();
calendar1.add(Calendar.MONTH, -1);//获取前一月
calendar1.set(Calendar.DAY_OF_MONTH,2);//然后设置为第11天
calendar1.set(Calendar.HOUR_OF_DAY,12);//设置时间为12点
calendar1.set(Calendar.MINUTE,0);  
calendar1.set(Calendar.SECOND,0);  
calendar1.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar1.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay);

//将时间字符串转换成unix时间戳
long epoch = sdf.parse(firstDay).getTime();
log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@:&quot;+epoch); 
vars.put(&quot;before_month1&quot;,epoch.toString());


//获取前一个月最后一天
Calendar calendar2 = Calendar.getInstance();
calendar2.set(Calendar.DAY_OF_MONTH, 0);
String lastDay = sdf.format(calendar2.getTime());

        
////第一种时间转换格式
//Date cur = new Date();  
//Calendar calendar = new GregorianCalendar();  
////calendar.add(Calendar.DAY_OF_MONTH,-1);  //今天往前一天（月/年），然后计算最早和最晚时间
//
////一天的开始时间 yyyy:MM:dd 00:00:00 ；如2018-04-12 00:00:00
//calendar.set(Calendar.HOUR_OF_DAY,0);  
//calendar.set(Calendar.MINUTE,0);  
//calendar.set(Calendar.SECOND,0);  
//calendar.set(Calendar.MILLISECOND,0);  
//Date dayStart = calendar.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天凌晨dayStart:&quot;+startStr);
//vars.put(&quot;todayStart&quot;,startStr);
//
//
////一天的结束时间 yyyy:MM:dd 23:59:59  
//calendar.set(Calendar.HOUR_OF_DAY,23);  
//calendar.set(Calendar.MINUTE,59);  
//calendar.set(Calendar.SECOND,59);  
//calendar.set(Calendar.MILLISECOND,999);  
//Date dayEnd = calendar.getTime();  
//String endStr = simpleDateFormat.format(dayEnd);  
//log.info(&quot;今天结束时间dayEnd:&quot;+endStr);
//vars.put(&quot;todayEnd&quot;,endStr);
//
////计算今天往前1天，然后计算时间16点，如2018-04-11T16:00:00.000Z
//Calendar calendar2 = new GregorianCalendar();  
//calendar2.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar2.set(Calendar.HOUR_OF_DAY,16);  
//calendar2.set(Calendar.MINUTE,0);  
//calendar2.set(Calendar.SECOND,0);  
//calendar2.set(Calendar.MILLISECOND,0);  
//Date dayStart2 = calendar2.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr2 = simpleDateFormat.format(dayStart2);  
//log.info(&quot;今天往前1天16点before_day1:&quot;+startStr2);
//vars.put(&quot;before_day1&quot;,startStr2);
//
//
////计算今天往前12月，然后计算凌晨;如2017-04-12 00:00:00
//Calendar calendar1 = new GregorianCalendar();  
//calendar1.add(Calendar.MONTH, -12);  //今天往前12月 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar1.set(Calendar.HOUR_OF_DAY,0);  
//calendar1.set(Calendar.MINUTE,0);  
//calendar1.set(Calendar.SECOND,0);  
//calendar1.set(Calendar.MILLISECOND,0);  
//Date dayStart1 = calendar1.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr1 = simpleDateFormat.format(dayStart1);  
//log.info(&quot;今天往前12个月凌晨before_month12:&quot;+startStr1);
//vars.put(&quot;before_month12&quot;,startStr1);
//
////计算今天往前12个月再往前1天，然后计算16点；如2017-04-11T16:00:00.000Z
//Calendar calendar3 = new GregorianCalendar();  
//calendar3.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
//calendar3.add(Calendar.MONTH, -12);  //今天再往前12个月
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar3.set(Calendar.HOUR_OF_DAY,16);  
//calendar3.set(Calendar.MINUTE,0);  
//calendar3.set(Calendar.SECOND,0);  
//calendar3.set(Calendar.MILLISECOND,0);  
//Date dayStart3 = calendar3.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr3 = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天往前12个月又1天16点before_month12_1:&quot;+startStr3);
//vars.put(&quot;before_month12_1&quot;,startStr3);


//
////第二种时间转换格式
//long current=System.currentTimeMillis();//当前时间毫秒数
//long zero=current/(1000*3600*24)*(1000*3600*24)-TimeZone.getDefault().getRawOffset();//今天零点零分零秒的毫秒数
//long twelve=zero+24*60*60*1000-1;//今天23点59分59秒的毫秒数
//
//log.info(&quot;当前时间毫秒数:&quot;+current.toString());
//log.info(&quot;今天零点零分零秒的毫秒数:&quot;+zero.toString());
//log.info(&quot;今天23点59分59秒的毫秒数:&quot;+twelve.toString());
//
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);    
//log.info(&quot;当前时间:&quot;+sdf.format(current)); 
//log.info(&quot;今天零点零分零秒:&quot;+sdf.format(zero));       
//log.info(&quot;今天23点59分59秒:&quot;+sdf.format(twelve));   
//
////第三种时间转换格式
////显示当前时间
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
//Date now = new Date();
//System.out.println(&quot;当前时间：&quot; + sdf.format(now));
//log.info(&quot;当前时间为：&quot;+sdf.format(now));
//String now_date = sdf.format(now);
//vars.put(&quot;now_date&quot;,now_date);
//
////获取12个月前的时间
//Calendar nowTime = Calendar.getInstance();
//nowTime.add(Calendar.MONTH, -12);//12个月前的时间
//log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
//String before_month = sdf.format(nowTime.getTime());
//vars.put(&quot;before_month12&quot;,before_month);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="还款场景" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="执行打款任务" enabled="true"/>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="更新bl_stage_borrow的gmt_create为昨天" enabled="true">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">
-- update bl_biz.bl_stage_borrow set gmt_create = &apos;2018-11-29 10:58:19&apos; where project_code = &apos;SHBT_QuanC_yonghu&apos; and status = &apos;APPLYING&apos;;
update ${bl_biz}.bl_stage_borrow set gmt_create = &apos;${firstDay}&apos; where project_code = &apos;${projectCode}&apos; and status = &apos;APPLYING&apos;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//import org.json.*;
import java.util.Date;  
import java.text.SimpleDateFormat; 

Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.DATE, -1); //得到前一天
Date date = calendar.getTime();
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(date);
log.info(&quot;firstDay-----------&quot;+firstDay); 
vars.put(&quot;firstDay&quot;,firstDay); </stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【批量打款】调定时任务" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${ip_quartz}/quartz/payout/upsMorePay</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【还款前执行】调担保打款定时任务http://172.16.158.57:8201/quartz/payout/guaranteePayout" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${ip_quartz}/quartz/payout/guaranteePayout</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://th52.bailingpay.com/bl/api/home/login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor--base64解密" enabled="false">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.io.*;
import org.apache.commons.codec;

String resp_data =vars.get(&quot;resp_str&quot;);
log.info(&quot;加密后获取的响应值-------&gt;&gt;&quot;+resp_data);

log.info(&quot;------------开始解密-------------------&quot;);
org.apache.commons.codec.binary.Base64 base64=new org.apache.commons.codec.binary.Base64();
String s=new String(base64.decode(resp_data));
log.info(&quot;解密后的值-------&gt;&gt;&quot;+s);
log.info(&quot;------------解密结束-------------------&quot;);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/index?returnData=${returnData}&amp;marsInfo=${marsInfo}&amp;sdkInfo=${sdkInfo}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tokenId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;userType&quot;:&quot;(.+)&quot;,&quot;warmPrompt&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取authType" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">authType</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前已用金额usedAmount" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">usedAmount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;usedAmount&quot;:(.+?),&quot;poundageRate&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取借款前可用金额amountAvailable" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">amountAvailable</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;amount&quot;:(.+?),&quot;needRepay&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">billIds</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="待还款订单数" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
              <boolProp name="autocommit">true</boolProp>
              <stringProp name="checkQuery"></stringProp>
              <stringProp name="connectionAge">5000</stringProp>
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="dbUrl">${JDBCurl}</stringProp>
              <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
              <boolProp name="keepAlive">true</boolProp>
              <stringProp name="password">${JDBCPassword}</stringProp>
              <stringProp name="poolMax">0</stringProp>
              <stringProp name="timeout">10000</stringProp>
              <stringProp name="transactionIsolation">DEFAULT</stringProp>
              <stringProp name="trimInterval">60000</stringProp>
              <stringProp name="username">${JDBCUsername}</stringProp>
            </JDBCDataSource>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询def_project_user_conf的user_id" enabled="false">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">-- select user_id from bl_biz.def_project_user_conf WHERE project_user_id=&apos;9604&apos; and project_code =&apos;SHBT_AiChong_yonghu&apos;;
-- 查询def_project_user_conf的user_id
select user_id from bl_biz.def_project_user_conf WHERE project_user_id=&apos;${projectUserId}&apos; and project_code =&apos;${projectCode}&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">user_id</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询bl_stage_borrow_bill的待付款单数" enabled="true">
              <stringProp name="dataSource">JDBCConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">
-- 查询bl_stage_borrow_bill的待付款单数
select count(*) from bl_biz.bl_stage_borrow_bill where user_id = &apos;${user_id}&apos; and project_code = &apos;${projectCode}&apos; and status = &apos;WAITREPAY&apos;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${count_1}</stringProp>
          </LoopController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询最新一条待还款订单id,borrow_id,capital_amount" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条首页https://th52.bailingpay.com/bl/api/home/homePage" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21409uoyfxn6rx&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/home/homePage</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billIds" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billIds</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取待还款账单billAmount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">billAmount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;billIds&quot;:&quot;(.+?)&quot;,&quot;billAmount&quot;:(.+?),&quot;gmtPlanRepayment&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default">0</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
                <boolProp name="autocommit">true</boolProp>
                <stringProp name="checkQuery"></stringProp>
                <stringProp name="connectionAge">5000</stringProp>
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="dbUrl">${JDBCurl}</stringProp>
                <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
                <boolProp name="keepAlive">true</boolProp>
                <stringProp name="password">${JDBCPassword}</stringProp>
                <stringProp name="poolMax">0</stringProp>
                <stringProp name="timeout">10000</stringProp>
                <stringProp name="transactionIsolation">DEFAULT</stringProp>
                <stringProp name="trimInterval">60000</stringProp>
                <stringProp name="username">${JDBCUsername}</stringProp>
              </JDBCDataSource>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询bl_stage_borrow_bill最新一条待还款订单id,borrow_id,capital_amount" enabled="true">
                <stringProp name="dataSource">JDBCConnection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">-- 根据billIds查询borrow_id
-- select borrow_id from bl_biz.bl_stage_borrow_bill where id = &apos;2555&apos;;
-- select borrow_id from ${bl_biz}.bl_stage_borrow_bill where id = &apos;${billIds}&apos;;

-- 查询最新一条待还款订单
-- select id,borrow_id from bl_biz.bl_stage_borrow_bill where user_id = &apos;947278037823580934&apos; and project_code = &apos;SHBT_AiChong_yonghu&apos; and status = &apos;WAITREPAY&apos; order by id desc limit 1;
select id,borrow_id,capital_amount from ${bl_biz}.bl_stage_borrow_bill where user_id = &apos;${user_id}&apos; and project_code = &apos;${projectCode}&apos; and status = &apos;WAITREPAY&apos; order by id desc limit 1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">billIds,borrow_id,capital_amount</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${capital_amount_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1银行卡--提交还款/bl/api/repayment/repay" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${__MD5(${mobile}${projectCode}${projectUserId}${key},sign)}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290215197tl7iyb4y5ve&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;repaymentAmount&quot;:${capital_amount_1},&quot;couponId&quot;:&quot;&quot;,&quot;rebateAmount&quot;:0,&quot;payPwd&quot;:&quot;${password}&quot;,&quot;cardId&quot;:${cardId},&quot;actualAmount&quot;:&quot;${capital_amount_1}&quot;,&quot;billIds&quot;:&quot;${billIds_1}&quot;,&quot;borrowId&quot;:&quot;${borrow_id_1}&quot;,&quot;authPaySwitch&quot;:&quot;&quot;,&quot;repayType&quot;:&quot;bankPay&quot;,&quot;thirdRebateAmount&quot;:0}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/bl/api/repayment/repay</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1558055305000</longProp>
        <longProp name="ThreadGroup.end_time">1558055305000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【小胖熊通用参数】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="agreement_BL" elementType="Argument">
              <stringProp name="Argument.name">agreement_BL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th51.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">CGBT_XPX_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectUserToken" elementType="Argument">
              <stringProp name="Argument.name">projectUserToken</stringProp>
              <stringProp name="Argument.value">01B6DAA6700395A122DDD2E0D602C96B</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">0C9820D122CBB549</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199001109859</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.57:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">担保/批量打款任务地址</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="用户参数CSV" enabled="true">
          <stringProp name="filename">C:\Users\linzi\Desktop\测试用户.txt</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="variableNames">mobile,projectUserId,projectUserToken,user_id,citizenId,password</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">tokenId</stringProp>
              <stringProp name="Header.value">${tokenId}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value"> application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="白条登录接口https://mh5.bailingpay.com/bl/api/home/login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;21018hczkgz8sxf&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;isRoot&quot;:0,&quot;storage&quot;:&quot;31.99G&quot;,&quot;devType&quot;:&quot;iPhone6&quot;,&quot;gyroscopeZ&quot;:&quot;-0.995&quot;,&quot;channel&quot;:&quot;bl_h5&quot;,&quot;gyroscopeY&quot;:&quot;-0.041&quot;,&quot;bssid&quot;:&quot;02:00:00:00:00:00&quot;,&quot;gyroscopeX&quot;:&quot;0.086&quot;,&quot;devOSVersion&quot;:&quot;12.0.1&quot;,&quot;appVersion&quot;:&quot;220&quot;,&quot;devId&quot;:&quot;0CFD9724-5805-4B1F-A6ED-B5BF07F7247B&quot;,&quot;storageUsed&quot;:&quot;6.79G&quot;,&quot;coordinateY&quot;:&quot;30.212109&quot;,&quot;coordinateX&quot;:&quot;120.205684&quot;,&quot;wifiName&quot;:&quot;linzi-wifi&quot;,&quot;electricity&quot;:&quot;64%&quot;,&quot;phone&quot;:&quot;&quot;,&quot;isCharging&quot;:0,&quot;ipAddr&quot;:&quot;10.0.0.236&quot;,&quot;devOS&quot;:&quot;iOS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mh5.bailingpay.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="【必要】HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://mh5.bailingpay.com/blhome/index?marsInfo=${marsInfo}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">tokenId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="下单支付【借款申请】 /bl/api/borrow/apply" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202902142953fyay19zjjwv&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;amount&quot;:${amount},&quot;payPassword&quot;:&quot;${password}&quot;,&quot;nper&quot;:${nper},&quot;borrowUse&quot;:&quot;&quot;,&quot;orderNo&quot;:&quot;${__time(,orderNo)}${__Random(1000,9999,)}&quot;,&quot;originals&quot;:&quot;&quot;,&quot;orderSign&quot;:&quot;&quot;,&quot;firstRepayDate&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,time)}&quot;}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mh5.bailingpay.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/borrow/apply</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value"> ${agreement_BL}://${ip_BL}/blf/borrow/money</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2024745369">&quot;code&quot;:&quot;000000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//import org.json.*;
import java.util.Date;  
import java.text.SimpleDateFormat; 

//获取当前时间的毫秒字符串，拼接借款订单号 
Date date = new Date();  
String orderNo = date.getTime() + &quot;123&quot;;
log.info(&quot;orderNo:&quot;+orderNo);
vars.put(&quot;orderNo&quot;,orderNo);

//Date date = new Date();  
//SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);//可以方便地修改日期格式


//java中获取一个月后日期和时间的方法
Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.MONTH, 1);//设置一月后
calendar.set(Calendar.DAY_OF_MONTH,10);//然后设置为第10天
calendar.set(Calendar.HOUR_OF_DAY,23);//设置时间为23点
calendar.set(Calendar.MINUTE,59);  
calendar.set(Calendar.SECOND,59);  
calendar.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay); 
vars.put(&quot;firstRepayDate&quot;,firstDay); </stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【勿删】BeanShell PreProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;


//显示当前时间
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
Date now = new Date();
System.out.println(&quot;当前时间：&quot; + sdf.format(now));
log.info(&quot;当前时间为：&quot;+sdf.format(now));
String now_date = sdf.format(now);
vars.put(&quot;todayStart&quot;,now_date);


//获取12个月前和6个月后的时间
Calendar nowTime = Calendar.getInstance();
nowTime.add(Calendar.MONTH, -10);//12个月前的时间
log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
String before_month = sdf.format(nowTime.getTime());
vars.put(&quot;before_month12&quot;,before_month);

Calendar nowTime2 = Calendar.getInstance();
nowTime2.add(Calendar.MONTH, 3);//3个月后的时间
log.info(&quot;3个月后的时间为：&quot;+sdf.format(nowTime2.getTime()));
String after_month = sdf.format(nowTime2.getTime());
vars.put(&quot;after_month3&quot;,after_month);

//获取30分钟后和30分钟前的时间
Calendar nowTime3 = Calendar.getInstance();
nowTime3.add(Calendar.MINUTE, 30);//30分钟后的时间
log.info(&quot;30分钟后的时间为：&quot;+sdf.format(nowTime3.getTime()));
Calendar nowTime4 = Calendar.getInstance();
nowTime4.add(Calendar.MINUTE, -30);//30分钟前的时间
log.info(&quot;30分钟前的时间为：&quot;+sdf.format(nowTime4.getTime()));

//生成随机数，Math.random()生成0~1的小数，即0&lt;a&lt;1，Math.ceil(a)四舍五入，使用new Double(a).intValue()取整数。
double a = Math.random()*1000000;
a = Math.ceil(a);
int randomSource = new Double(a).intValue();
log.info(&quot;*********生成智能筛选项目名称的随机数randomSource:&quot;+randomSource+&quot;**********************&quot;);

//将生成的智能筛选和随机数拼装，并存入参数。
String projectName = &quot;智能筛选&quot;+randomSource;
vars.put(&quot;projectName2&quot;,projectName);
log.info(&quot;*********生成智能筛选项目名称projectName2:&quot;+projectName+&quot;**********************&quot;);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="【备用勿删】BeanShell PreProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.util.Date;  
import java.text.SimpleDateFormat;  
import java.text.DateFormat;  
import java.text.ParseException;  
import java.util.Calendar; 
import org.json.*;
import java.util.Random;

//获取前一个月第一天
Calendar calendar1 = Calendar.getInstance();
calendar1.add(Calendar.MONTH, -1);//获取前一月
calendar1.set(Calendar.DAY_OF_MONTH,2);//然后设置为第11天
calendar1.set(Calendar.HOUR_OF_DAY,12);//设置时间为12点
calendar1.set(Calendar.MINUTE,0);  
calendar1.set(Calendar.SECOND,0);  
calendar1.set(Calendar.MILLISECOND,0); 
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
String firstDay = sdf.format(calendar1.getTime());
log.info(&quot;firstDay-----------&quot;+firstDay);

//将时间字符串转换成unix时间戳
long epoch = sdf.parse(firstDay).getTime();
log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@:&quot;+epoch); 
vars.put(&quot;before_month1&quot;,epoch.toString());


//获取前一个月最后一天
Calendar calendar2 = Calendar.getInstance();
calendar2.set(Calendar.DAY_OF_MONTH, 0);
String lastDay = sdf.format(calendar2.getTime());

        
////第一种时间转换格式
//Date cur = new Date();  
//Calendar calendar = new GregorianCalendar();  
////calendar.add(Calendar.DAY_OF_MONTH,-1);  //今天往前一天（月/年），然后计算最早和最晚时间
//
////一天的开始时间 yyyy:MM:dd 00:00:00 ；如2018-04-12 00:00:00
//calendar.set(Calendar.HOUR_OF_DAY,0);  
//calendar.set(Calendar.MINUTE,0);  
//calendar.set(Calendar.SECOND,0);  
//calendar.set(Calendar.MILLISECOND,0);  
//Date dayStart = calendar.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天凌晨dayStart:&quot;+startStr);
//vars.put(&quot;todayStart&quot;,startStr);
//
//
////一天的结束时间 yyyy:MM:dd 23:59:59  
//calendar.set(Calendar.HOUR_OF_DAY,23);  
//calendar.set(Calendar.MINUTE,59);  
//calendar.set(Calendar.SECOND,59);  
//calendar.set(Calendar.MILLISECOND,999);  
//Date dayEnd = calendar.getTime();  
//String endStr = simpleDateFormat.format(dayEnd);  
//log.info(&quot;今天结束时间dayEnd:&quot;+endStr);
//vars.put(&quot;todayEnd&quot;,endStr);
//
////计算今天往前1天，然后计算时间16点，如2018-04-11T16:00:00.000Z
//Calendar calendar2 = new GregorianCalendar();  
//calendar2.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar2.set(Calendar.HOUR_OF_DAY,16);  
//calendar2.set(Calendar.MINUTE,0);  
//calendar2.set(Calendar.SECOND,0);  
//calendar2.set(Calendar.MILLISECOND,0);  
//Date dayStart2 = calendar2.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr2 = simpleDateFormat.format(dayStart2);  
//log.info(&quot;今天往前1天16点before_day1:&quot;+startStr2);
//vars.put(&quot;before_day1&quot;,startStr2);
//
//
////计算今天往前12月，然后计算凌晨;如2017-04-12 00:00:00
//Calendar calendar1 = new GregorianCalendar();  
//calendar1.add(Calendar.MONTH, -12);  //今天往前12月 
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar1.set(Calendar.HOUR_OF_DAY,0);  
//calendar1.set(Calendar.MINUTE,0);  
//calendar1.set(Calendar.SECOND,0);  
//calendar1.set(Calendar.MILLISECOND,0);  
//Date dayStart1 = calendar1.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  
//String startStr1 = simpleDateFormat.format(dayStart1);  
//log.info(&quot;今天往前12个月凌晨before_month12:&quot;+startStr1);
//vars.put(&quot;before_month12&quot;,startStr1);
//
////计算今天往前12个月再往前1天，然后计算16点；如2017-04-11T16:00:00.000Z
//Calendar calendar3 = new GregorianCalendar();  
//calendar3.add(Calendar.DAY_OF_MONTH, -1);  //今天往前1天 
//calendar3.add(Calendar.MONTH, -12);  //今天再往前12个月
////一天的开始时间 yyyy:MM:dd 00:00:00  
//calendar3.set(Calendar.HOUR_OF_DAY,16);  
//calendar3.set(Calendar.MINUTE,0);  
//calendar3.set(Calendar.SECOND,0);  
//calendar3.set(Calendar.MILLISECOND,0);  
//Date dayStart3 = calendar3.getTime();  
//SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;&quot;);  
//String startStr3 = simpleDateFormat.format(dayStart);  
//log.info(&quot;今天往前12个月又1天16点before_month12_1:&quot;+startStr3);
//vars.put(&quot;before_month12_1&quot;,startStr3);


//
////第二种时间转换格式
//long current=System.currentTimeMillis();//当前时间毫秒数
//long zero=current/(1000*3600*24)*(1000*3600*24)-TimeZone.getDefault().getRawOffset();//今天零点零分零秒的毫秒数
//long twelve=zero+24*60*60*1000-1;//今天23点59分59秒的毫秒数
//
//log.info(&quot;当前时间毫秒数:&quot;+current.toString());
//log.info(&quot;今天零点零分零秒的毫秒数:&quot;+zero.toString());
//log.info(&quot;今天23点59分59秒的毫秒数:&quot;+twelve.toString());
//
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);    
//log.info(&quot;当前时间:&quot;+sdf.format(current)); 
//log.info(&quot;今天零点零分零秒:&quot;+sdf.format(zero));       
//log.info(&quot;今天23点59分59秒:&quot;+sdf.format(twelve));   
//
////第三种时间转换格式
////显示当前时间
//SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
//Date now = new Date();
//System.out.println(&quot;当前时间：&quot; + sdf.format(now));
//log.info(&quot;当前时间为：&quot;+sdf.format(now));
//String now_date = sdf.format(now);
//vars.put(&quot;now_date&quot;,now_date);
//
////获取12个月前的时间
//Calendar nowTime = Calendar.getInstance();
//nowTime.add(Calendar.MONTH, -12);//12个月前的时间
//log.info(&quot;12个月前的时间为：&quot;+sdf.format(nowTime.getTime()));
//String before_month = sdf.format(nowTime.getTime());
//vars.put(&quot;before_month12&quot;,before_month);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <longProp name="ThreadGroup.start_time">1558343485000</longProp>
        <longProp name="ThreadGroup.end_time">1558343485000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量【小胖熊通用参数】" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="protocol" elementType="Argument">
              <stringProp name="Argument.name">protocol</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_BL" elementType="Argument">
              <stringProp name="Argument.name">ip_BL</stringProp>
              <stringProp name="Argument.value">th54.bailingpay.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="projectCode" elementType="Argument">
              <stringProp name="Argument.name">projectCode</stringProp>
              <stringProp name="Argument.value">SHBT_QuanC_yonghu</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="key" elementType="Argument">
              <stringProp name="Argument.name">key</stringProp>
              <stringProp name="Argument.value">ACD1C229A745139D</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">李四</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="citizenId" elementType="Argument">
              <stringProp name="Argument.name">citizenId</stringProp>
              <stringProp name="Argument.value">110101199001109859</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">CMB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bankName" elementType="Argument">
              <stringProp name="Argument.name">bankName</stringProp>
              <stringProp name="Argument.value">招商银行</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardNumber" elementType="Argument">
              <stringProp name="Argument.name">cardNumber</stringProp>
              <stringProp name="Argument.value">621485571716${__Random(1000,9999,card)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">96e79218965eb72c92a549dd5a330112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emergenceName" elementType="Argument">
              <stringProp name="Argument.name">emergenceName</stringProp>
              <stringProp name="Argument.value">李四¥@</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="amount" elementType="Argument">
              <stringProp name="Argument.name">amount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nper" elementType="Argument">
              <stringProp name="Argument.name">nper</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cardId" elementType="Argument">
              <stringProp name="Argument.name">cardId</stringProp>
              <stringProp name="Argument.value">758</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ip_quartz" elementType="Argument">
              <stringProp name="Argument.name">ip_quartz</stringProp>
              <stringProp name="Argument.value">http://172.16.158.57:8201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">担保/批量打款任务地址</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="用户参数CSV" enabled="true">
          <stringProp name="filename">C:\Users\linzi\Desktop\测试用户.txt</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="variableNames">mobile,projectUserId,projectUserToken,user_id,citizenId,password</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ip_BL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">tokenId</stringProp>
              <stringProp name="Header.value">${tokenId}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://th54.bailingpay.com/bl/api/home/login HTTP/1.1 Host: th51.bailingpay.com " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;ANDROID&quot;,&quot;blackBox&quot;:&quot;201905201636475a5qmg8ga12rbxtmeyicr6n7b9&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;marsInfo&quot;:&quot;${marsInfo}&quot;,&quot;orderInfo&quot;:&quot;eyJhbW91bnQiOjIxOSwib3JkZXJEZXRhaWwiOiIiLCJvcmRlck5vIjoiMTkwNTIwMTYzNjQzNjA0MzgxIiwib3JnaW5hbHMiOiIiLCJvcmRlclNpZ24iOiIwZDYwZjdhMTA1OTVmODAzNjZhYzBjMzlkZjk4NDA2MiJ9&quot;,&quot;phone&quot;:&quot;18556511951&quot;,&quot;ipAddr&quot;:&quot;10.0.1.170&quot;,&quot;coordinateX&quot;:&quot;120.201422&quot;,&quot;coordinateY&quot;:&quot;30.214269&quot;,&quot;devType&quot;:&quot;OPPO R9sk&quot;,&quot;devOS&quot;:&quot;Android&quot;,&quot;devOSVersion&quot;:&quot;android6.0.1&quot;,&quot;devId&quot;:&quot;864318033941056&quot;,&quot;appVersion&quot;:&quot;244&quot;,&quot;serialNum&quot;:&quot;ffffffffdf35b96a0000000033c61c73&quot;,&quot;wifiName&quot;:&quot;\&quot;linzi-wifi\&quot;&quot;,&quot;bssid&quot;:&quot;48:bd:3d:61:ef:20&quot;,&quot;electricity&quot;:&quot;56%&quot;,&quot;storage&quot;:&quot;64G&quot;,&quot;storageUsed&quot;:&quot;11.50 GB&quot;,&quot;isCharging&quot;:0,&quot;gyroscopeX&quot;:0.0845489501953125,&quot;gyroscopeY&quot;:0.004119873046875,&quot;gyroscopeZ&quot;:0.0077972412109375,&quot;isRoot&quot;:0,&quot;channel&quot;:&quot;bl_h5&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">th54.bailingpay.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/home/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor--base64加密" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import sun.misc.BASE64Decoder;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.codec.binary.Base64;


log.info(&quot;------------MD5开始加密-------------------&quot;);
//sign用户信息签名规则mobile+projectCode+projectUserId+key,
//根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）
String str = &quot;${mobile}&quot;+&quot;${projectCode}&quot;+&quot;${projectUserId}&quot;+&quot;${key}&quot;;

//使用DigestUtils进行md5加密
log.info(&quot;用户信息签名md5加密前sign ：&quot;+str);
String sign = DigestUtils.md5Hex(str).toUpperCase();
vars.put(&quot;sign&quot;,sign);
log.info(&quot;用户信息签名md5加密后sign ：&quot;+sign);

//通过转义字符\定义带双引号的字符串变量
String res1 = &quot;{\&quot;jumpFrom\&quot;:\&quot;02\&quot;,\&quot;appType\&quot;:\&quot;APP\&quot;,\&quot;thirdBackUrl\&quot;:\&quot;\&quot;}&quot;;
String res2 = &quot;{\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;projectCode\&quot;:\&quot;${projectCode}\&quot;,\&quot;projectUserId\&quot;:\&quot;${projectUserId}\&quot;,\&quot;projectUserToken\&quot;:\&quot;${projectUserToken}\&quot;,\&quot;sign\&quot;:\&quot;&quot;+sign+&quot;\&quot;}&quot;;


//\n换行
String res3 = &quot;{\\n  \&quot;sdkVersion\&quot; : \&quot;230\&quot;\\n}&quot;;
log.info(&quot;base64加密前returnData的值-------&gt;&gt;&quot;+res1);
log.info(&quot;base64加密前marsInfo的值-------&gt;&gt;&quot;+res2);
log.info(&quot;base64加密前sdkInfo的值-------&gt;&gt;&quot;+res3);
log.info(&quot;------------MD5加密结束-------------------&quot;);

log.info(&quot;------------base64开始加密-------------------&quot;);

//使用BASE64Decoder实现base64加密
//注意：此BASE64Encoder加密后会换行！！！
String returnData = new sun.misc.BASE64Encoder().encode(res1.getBytes());
String marsInfo = new sun.misc.BASE64Encoder().encode(res2.getBytes());
marsInfo = marsInfo.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
String sdkInfo = new sun.misc.BASE64Encoder().encode(res3.getBytes());
log.info(&quot;base64加密后的值-------&gt;&gt;returnData=&quot;+returnData+&quot;&amp;marsInfo=&quot;+marsInfo+&quot;&amp;sdkInfo=&quot;+sdkInfo);
log.info(&quot;base64加密后的值-------marsInfo=&quot;+marsInfo);

//String test = &quot;称得上dadafdegsrg;drkg;kd;gk;lk;ljglrjljljlkfrjlkfklgffefd根据接口的sign字段补充说明的参数顺序最后再拼接key,然后使用MD5进行加密,得到的值即为sign值（大小写不敏感）&quot;;

//推荐：此Base64加密方式加密后不会换行！！！
//String test2 = Base64.encodeBase64String(test.getBytes());

//注意：此BASE64Encoder加密后会换行！！！
//String test3 = new sun.misc.BASE64Encoder().encode(test.getBytes());
//test2 = test3.replaceAll(&quot;[*\t\n\r]&quot;,&quot;&quot;);
//log.info(&quot;base64加密后的值-------&gt;&gt;test2=&quot;+test2);


vars.put(&quot;returnData&quot;,returnData);
vars.put(&quot;marsInfo&quot;,marsInfo);
vars.put(&quot;sdkInfo&quot;,sdkInfo);
log.info(&quot;------------base64加密结束-------------------&quot;);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取tokenId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">tokenId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;tokenId&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户信息/bl/api/base-auth/user/getUser" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;20290116929jmpwhdktijq&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/base-auth/user/getUser</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${agreement_BL}://${ip_BL}/blf/auth/bindbankcard</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-986140890">&quot;realName&quot;:&quot;${name}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="设置支付密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${mobile}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;IOS&quot;,&quot;blackBox&quot;:&quot;202901163357fvth5s1kyxh&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;idNumber&quot;:&quot;33088119951216713&quot;,&quot;password&quot;:&quot;55587a910882016321201e6ebbc9f595&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/base-auth/bankcard/setPayPassword</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST https://th54.bailingpay.com/bl/api/borrow/apply HTTP/1.1 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;projectCode&quot;:&quot;${projectCode}&quot;,&quot;projectUserId&quot;:&quot;${projectUserId}&quot;,&quot;sign&quot;:&quot;${sign}&quot;,&quot;mobile&quot;:&quot;${mobile}&quot;,&quot;loginName&quot;:&quot;${loginName}&quot;,&quot;appType&quot;:&quot;APP&quot;,&quot;devOs&quot;:&quot;ANDROID&quot;,&quot;blackBox&quot;:&quot;2019052016474790wqocecnfa98mawdmcmcxr&quot;,&quot;appName&quot;:&quot;linzi_h5&quot;,&quot;amount&quot;:219,&quot;payPassword&quot;:&quot;55587a910882016321201e6ebbc9f595&quot;,&quot;nper&quot;:1,&quot;firstRepayDate&quot;:&quot;2019-06-05 23:59:59&quot;,&quot;orderNo&quot;:&quot;${__time(,orderNo)}${__Random(1000,9999,)}&quot;,&quot;interestWay&quot;:1,&quot;userCouponId&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">th54.bailingpay.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/bl/api/borrow/apply</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
